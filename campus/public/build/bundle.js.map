{"version":3,"file":"build/bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;;AAEuD;;AAEvD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEO;AACP,kCAAkC,yBAAyB;AAC3D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;;AAEA;AACA;AACA,IAAI,sDAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,uBAAuB,wDAAa;AACpC;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,UAAU;;AAExB;AACA;AACA,cAAc,iCAAiC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,UAAU,wDAAa;AACvB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,GAAG;AAC1E;;AAEA;AACA;;;;;;;;;;;;;;;;AC3K2C;;;;;;;;;;;;;;;ACA3C;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA,OAAO;AACP;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;;AAEA;AACA,sBAAsB,SAAS;AAC/B;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,YAAY;;;;;;;;;;;;;;;;;;ACpI3B;AACiD;AACjD;AACA;AACA,gCAAgC;AAChC;AACA,qBAAqB,6DAA+B,IAAI,mDAAqB;AAC7E;AACA;AACA;AACA;AACA;;AAEuC;;AAEvC;;AAEO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uDAAY;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iEAAe,OAAO;;;;;;;;;;;;;;;;;ACxGtB;AACA;AACA;AACA;AACA;AACA;;AAE0D;;AAE1D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,+BAA+B,oBAAoB;;AAEnD,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA,KAAK;AACL,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,qDAAqD,UAAU;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,YAAY,uBAAuB;;AAEnC;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAM,yEAAsB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,MAAM;AACN,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEO;;AAEP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,UAAU;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,UAAU;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ;AACR,uCAAuC,UAAU;AACjD;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,WAAW;AACX;;;;;;;;;;;;;;;;AC1aA;AACA;AACA;AACA;AACA;AACA;AAKwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,8BAA8B;AACxC,IAAI;;AAEJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sEAAqB;AAChC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B,MAAM;AACN;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA,MAAM,uEAAqB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AA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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE0T;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/IvF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,KAAK;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,yBAAyB;AACxD,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,IAAI;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC,qBAAqB,4CAA4C;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,kBAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4BAA4B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,oBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,oBAAoB,QAAQ,SAAS,aAAa,cAAc;AAClH,2BAA2B,WAAW,YAAY,sBAAsB,YAAY;AACpF;AACA;AACA;AACA;AACA;AACA,iEAAiE,0BAA0B;AAC3F;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sCAAsC,IAAI;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA,yCAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,oBAAoB,QAAQ;AAC5B;AACA,kCAAkC,EAAE,cAAc;AAClD;AACA,oCAAoC,EAAE,cAAc,GAAG;AACvD,6BAA6B,WAAW,GAAG,IAAI;AAC/C;AACA,YAAY,oBAAoB;AAChC;AACA;AACA,4CAA4C,MAAM,EAAE,KAAK;AACzD;AACA;AACA,8BAA8B,eAAe,UAAU,SAAS,EAAE,MAAM,EAAE,SAAS,YAAY,MAAM;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,oDAAoD,aAAa,UAAU;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW,YAAY,gBAAgB,MAAM,cAAc;AAC7F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB,IAAI;AACrD;AACA;AACA;AACA;AACA,uDAAuD,YAAY;AACnE;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uCAAuC,8BAA8B,EAAE,KAAK;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iEAAiE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iEAAiE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iEAAiE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvoBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qDAAqD,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,OAAO,GAAG,OAAO;AACrX;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,KAAK,IAAI,MAAM;AACtC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,yBAAyB,SAAS;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,IAAI;AAChC,4BAA4B,KAAK,oMAAoM,KAAK;AAC1O;AACA;AACA;AACA;AACA,kBAAkB,QAAQ,EAAE,uBAAuB,GAAG,KAAK,GAAG,OAAO,KAAK;AAC1E,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,2BAA2B,IAAI,YAAY,wBAAwB,IAAI;AACvE;AACA,6BAA6B;AAC7B,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,oBAAoB;AACnF,eAAe,KAAK,EAAE,WAAW;AACjC;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA,uBAAuB,IAAI,IAAI,mBAAmB;AAClD;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8DAA8D,mBAAmB,aAAa,eAAe;AAC7G;AACA;AACA,sCAAsC,cAAc;AACpD;AACA;AACA;AACA,sCAAsC,cAAc;AACpD;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA,sCAAsC,MAAM;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iCAAiC;AACjF;AACA;AACA,uDAAuD,iCAAiC;AACxF;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,iBAAiB;AACpE;AACA,gDAAgD,wBAAwB;AACxE;AACA;AACA;AACA,2CAA2C,uBAAuB;AAClE;AACA;AACA;AACA,0CAA0C,uBAAuB;AACjE;AACA;AACA;AACA;AACA;AACA,uCAAuC,kBAAkB;AACzD;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,KAAK,iCAAiC,SAAS;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,IAAI;AAClD;AACA;AACA;AACA,iCAAiC,KAAK;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC,0DAA0D,YAAY;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA,6DAA6D,YAAY;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE4wF;;;;;;;;;;;;;;;;;;;AClvE9qF;AAC/B;;AAE/D;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,mBAAmB;AAC9B;AACA,iCAAiC,qDAAI;AACrC;AACA;AACA;AACA,YAAY,mEAAc;AAC1B;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qDAAI;AAC7C;AACA;AACA;AACA,iCAAiC,qDAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qDAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gEAAW,oBAAoB,qDAAI;AAC7D;AACA;AACA,6DAA6D,8DAAS;AACtE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,YAAY,4DAAO;AACnB;AACA;AACA,KAAK;AACL;;AAEuC;;;;;;;;;;;;;;;;;;;;;;;ACtG4B;AACP;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,cAAc;AAC3E;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,oCAAoC,yDAAU,4BAA4B,IAAI;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4BAA4B,UAAU,GAAG,OAAO,WAAW,IAAI;AACnG;AACA;AACA,sBAAsB,oCAAoC,qDAAM,GAAG,IAAI;AACvE;AACA;AACA;AACA;AACA;AACA,8BAA8B,MAAM;AACpC;AACA;AACA,qBAAqB,oCAAoC,uDAAQ,8BAA8B,IAAI;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW,YAAY,YAAY,MAAM,YAAY;AACrE,cAAc,0BAA0B;AACxC;AACA;AACA,uBAAuB,oCAAoC,uDAAQ,GAAG,IAAI;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,wBAAwB,+BAA+B;AACvD,uBAAuB,WAAW,GAAG;AACrC,4BAA4B,gBAAgB,GAAG;AAC/C,+BAA+B,mBAAmB,GAAG;AACrD,2BAA2B,eAAe,GAAG;AAC7C,8BAA8B,kBAAkB,GAAG;AACnD,iCAAiC,qBAAqB,GAAG;AACzD,oCAAoC,wBAAwB,GAAG;AAC/D;AACA;AACA,uBAAuB,oCAAoC,uDAAQ,2BAA2B,IAAI;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW,QAAQ,aAAa;AAChD,cAAc;AACd;AACA;AACA;AACA,sBAAsB,qCAAqC,yDAAU,GAAG,IAAI;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,SAAS,EAAE,QAAQ;AAC/D;AACA;AACA;AACA,UAAU,WAAW;AACrB;AACA;AACA;AACA,gBAAgB,uDAAuD,uDAAQ,GAAG,EAAE,2DAAM,CAAC,2DAAM,GAAG;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gEAAW;AACjC;AACA;AACA,eAAe;AACf;AACA,iBAAiB,WAAW,YAAY,OAAO,KAAK,OAAO,YAAY,iBAAiB,IAAI,iBAAiB;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE0D;;;;;;;UCrL1D;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WC5BA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA,IAAI;WACJ;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,CAAC;WACD;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA,sGAAsG;WACtG;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA,EAAE;WACF;WACA;;;;;WChEA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;;;;;WCVA;;;;;WCAA;WACA;WACA;WACA;WACA,uBAAuB,4BAA4B;WACnD;WACA;WACA;WACA,iBAAiB,oBAAoB;WACrC;WACA,mGAAmG,YAAY;WAC/G;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,mEAAmE,iCAAiC;WACpG;WACA;WACA;WACA;;;;;WCzCA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WCVA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WCfA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,iCAAiC;;WAEjC;WACA;WACA;WACA,KAAK;WACL,eAAe;WACf;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;WACA;WACA;;;;;;;;;;;;;;;;;;;;ACrFA,aAAa;AACuB;AAGb;AACC;AACQ;AACM;AAErC,MAAc,CAAC,CAAC,GAAG,6CAAC,CAAC;AACrB,MAAc,CAAC,CAAC,GAAG,8CAAC,CAAC;AACrB,MAAc,CAAC,KAAK,GAAG,kDAAK,CAAC;AAC7B,MAAc,CAAC,YAAY,GAAG,+CAAY,CAAC;AAE5C,0BAA0B;AACe;AACzC,MAAM,EAAE,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC;AACxD,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;IAAE,iDAAY,CAAC,uDAAW,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACxD,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAAC,IAAI,CAAC,EAAE;IAC7B,IAAI,CAAC,KAAK,GAAG;QAAE,8CAAS,CAAC,sDAAU,CAAC,CAAC;IACrC,IAAI,CAAC,KAAK,GAAG;QAAE,8CAAS,CAAC,sDAAU,CAAC,CAAC;CACrC;AAED,MAAM,GAAG,GAAG,IAAI,wDAAG,CAAC;IACnB,MAAM,EAAE,QAAQ,CAAC,IAAI;CACrB,CAAC,CAAC;AAEH,iEAAe,GAAG,EAAC","sources":["webpack://svelte-app/./node_modules/svelte-hmr/runtime/hot-api.js","webpack://svelte-app/./node_modules/svelte-hmr/runtime/index.js","webpack://svelte-app/./node_modules/svelte-hmr/runtime/overlay.js","webpack://svelte-app/./node_modules/svelte-hmr/runtime/proxy-adapter-dom.js","webpack://svelte-app/./node_modules/svelte-hmr/runtime/proxy.js","webpack://svelte-app/./node_modules/svelte-hmr/runtime/svelte-hooks.js","webpack://svelte-app/./src/comp/App.svelte","webpack://svelte-app/./src/comp/Automatenauswahl.svelte","webpack://svelte-app/./src/comp/DevOutTable.svelte","webpack://svelte-app/./src/comp/Overlays/Final_Overlay.svelte","webpack://svelte-app/./src/comp/Overlays/OverlayBase.svelte","webpack://svelte-app/./src/comp/Overlays/Stellung_Overlay.svelte","webpack://svelte-app/./src/comp/Statistik.svelte","webpack://svelte-app/./src/comp/Status.svelte","webpack://svelte-app/./src/comp/Stellung.svelte","webpack://svelte-app/./src/comp/Togre.svelte","webpack://svelte-app/./src/comp/brett/Brett.svelte","webpack://svelte-app/./src/comp/brett/BrettBase.svelte","webpack://svelte-app/./node_modules/svelte-loader/lib/hot-api.js","webpack://svelte-app/./src/auto.ts","webpack://svelte-app/./src/core.ts","webpack://svelte-app/./src/halbkreis.ts","webpack://svelte-app/./src/preload_db.ts","webpack://svelte-app/./src/stores.ts","webpack://svelte-app/./src/togre.ts","webpack://svelte-app/./src/tools.ts","webpack://svelte-app/./node_modules/svelte/easing/index.mjs","webpack://svelte-app/./node_modules/svelte/index.mjs","webpack://svelte-app/./node_modules/svelte/internal/index.mjs","webpack://svelte-app/./node_modules/svelte/store/index.mjs","webpack://svelte-app/./node_modules/svelte/transition/index.mjs","webpack://svelte-app/webpack/bootstrap","webpack://svelte-app/webpack/runtime/async module","webpack://svelte-app/webpack/runtime/define property getters","webpack://svelte-app/webpack/runtime/ensure chunk","webpack://svelte-app/webpack/runtime/get javascript chunk filename","webpack://svelte-app/webpack/runtime/get mini-css chunk filename","webpack://svelte-app/webpack/runtime/global","webpack://svelte-app/webpack/runtime/harmony module decorator","webpack://svelte-app/webpack/runtime/hasOwnProperty shorthand","webpack://svelte-app/webpack/runtime/load script","webpack://svelte-app/webpack/runtime/make namespace object","webpack://svelte-app/webpack/runtime/wasm loading","webpack://svelte-app/webpack/runtime/publicPath","webpack://svelte-app/webpack/runtime/jsonp chunk loading","webpack://svelte-app/./src/main.ts"],"sourcesContent":["/* eslint-env browser */\n\nimport { createProxy, hasFatalError } from './proxy.js'\n\nconst logPrefix = '[HMR:Svelte]'\n\n// eslint-disable-next-line no-console\nconst log = (...args) => console.log(logPrefix, ...args)\n\nconst domReload = () => {\n  // eslint-disable-next-line no-undef\n  const win = typeof window !== 'undefined' && window\n  if (win && win.location && win.location.reload) {\n    log('Reload')\n    win.location.reload()\n  } else {\n    log('Full reload required')\n  }\n}\n\nconst replaceCss = (previousId, newId) => {\n  if (typeof document === 'undefined') return false\n  if (!previousId) return false\n  if (!newId) return false\n  // svelte-xxx-style => svelte-xxx\n  const previousClass = previousId.slice(0, -6)\n  const newClass = newId.slice(0, -6)\n  // eslint-disable-next-line no-undef\n  document.querySelectorAll('.' + previousClass).forEach(el => {\n    el.classList.remove(previousClass)\n    el.classList.add(newClass)\n  })\n  return true\n}\n\nconst removeStylesheet = cssId => {\n  if (cssId == null) return\n  if (typeof document === 'undefined') return\n  // eslint-disable-next-line no-undef\n  const el = document.getElementById(cssId)\n  if (el) el.remove()\n  return\n}\n\nconst defaultArgs = {\n  reload: domReload,\n}\n\nexport const makeApplyHmr = transformArgs => args => {\n  const allArgs = transformArgs({ ...defaultArgs, ...args })\n  return applyHmr(allArgs)\n}\n\nlet needsReload = false\n\nfunction applyHmr(args) {\n  const {\n    id,\n    cssId,\n    nonCssHash,\n    reload = domReload,\n    // normalized hot API (must conform to rollup-plugin-hot)\n    hot,\n    hotOptions,\n    Component,\n    acceptable, // some types of components are impossible to HMR correctly\n    preserveLocalState,\n    ProxyAdapter,\n    emitCss,\n  } = args\n\n  const existing = hot.data && hot.data.record\n\n  const canAccept = acceptable && (!existing || existing.current.canAccept)\n\n  const r =\n    existing ||\n    createProxy({\n      Adapter: ProxyAdapter,\n      id,\n      Component,\n      hotOptions,\n      canAccept,\n      preserveLocalState,\n    })\n\n  const cssOnly =\n    hotOptions.injectCss &&\n    existing &&\n    nonCssHash &&\n    existing.current.nonCssHash === nonCssHash\n\n  r.update({\n    Component,\n    hotOptions,\n    canAccept,\n    nonCssHash,\n    cssId,\n    previousCssId: r.current.cssId,\n    cssOnly,\n    preserveLocalState,\n  })\n\n  hot.dispose(data => {\n    // handle previous fatal errors\n    if (needsReload || hasFatalError()) {\n      if (hotOptions && hotOptions.noReload) {\n        log('Full reload required')\n      } else {\n        reload()\n      }\n    }\n\n    // 2020-09-21 Snowpack master doesn't pass data as arg to dispose handler\n    data = data || hot.data\n\n    data.record = r\n\n    if (!emitCss && cssId && r.current.cssId !== cssId) {\n      if (hotOptions.cssEjectDelay) {\n        setTimeout(() => removeStylesheet(cssId), hotOptions.cssEjectDelay)\n      } else {\n        removeStylesheet(cssId)\n      }\n    }\n  })\n\n  if (canAccept) {\n    hot.accept(async arg => {\n      const { bubbled } = arg || {}\n\n      // NOTE Snowpack registers accept handlers only once, so we can NOT rely\n      // on the surrounding scope variables -- they're not the last version!\n      const { cssId: newCssId, previousCssId } = r.current\n      const cssChanged = newCssId !== previousCssId\n      // ensure old style sheet has been removed by now\n      if (!emitCss && cssChanged) removeStylesheet(previousCssId)\n      // guard: css only change\n      if (\n        // NOTE bubbled is provided only by rollup-plugin-hot, and we\n        // can't safely assume a CSS only change without it... this means we\n        // can't support CSS only injection with Nollup or Webpack currently\n        bubbled === false && // WARNING check false, not falsy!\n        r.current.cssOnly &&\n        (!cssChanged || replaceCss(previousCssId, newCssId))\n      ) {\n        return\n      }\n\n      const success = await r.reload()\n\n      if (hasFatalError() || (!success && !hotOptions.optimistic)) {\n        needsReload = true\n      }\n    })\n  }\n\n  // well, endgame... we won't be able to render next updates, even successful,\n  // if we don't have proxies in svelte's tree\n  //\n  // since we won't return the proxy and the app will expect a svelte component,\n  // it's gonna crash... so it's best to report the real cause\n  //\n  // full reload required\n  //\n  const proxyOk = r && r.proxy\n  if (!proxyOk) {\n    throw new Error(`Failed to create HMR proxy for Svelte component ${id}`)\n  }\n\n  return r.proxy\n}\n","export { makeApplyHmr } from './hot-api.js'\n","/* eslint-env browser */\n\nconst removeElement = el => el && el.parentNode && el.parentNode.removeChild(el)\n\nconst ErrorOverlay = () => {\n  let errors = []\n  let compileError = null\n\n  const errorsTitle = 'Failed to init component'\n  const compileErrorTitle = 'Failed to compile'\n\n  const style = {\n    section: `\n      position: fixed;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      padding: 32px;\n      background: rgba(0, 0, 0, .85);\n      font-family: Menlo, Consolas, monospace;\n      font-size: large;\n      color: rgb(232, 232, 232);\n      overflow: auto;\n      z-index: 2147483647;\n    `,\n    h1: `\n      margin-top: 0;\n      color: #E36049;\n      font-size: large;\n      font-weight: normal;\n    `,\n    h2: `\n      margin: 32px 0 0;\n      font-size: large;\n      font-weight: normal;\n    `,\n    pre: ``,\n  }\n\n  const createOverlay = () => {\n    const h1 = document.createElement('h1')\n    h1.style = style.h1\n    const section = document.createElement('section')\n    section.appendChild(h1)\n    section.style = style.section\n    const body = document.createElement('div')\n    section.appendChild(body)\n    return { h1, el: section, body }\n  }\n\n  const setTitle = title => {\n    overlay.h1.textContent = title\n  }\n\n  const show = () => {\n    const { el } = overlay\n    if (!el.parentNode) {\n      const target = document.body\n      target.appendChild(overlay.el)\n    }\n  }\n\n  const hide = () => {\n    const { el } = overlay\n    if (el.parentNode) {\n      overlay.el.remove()\n    }\n  }\n\n  const update = () => {\n    if (compileError) {\n      overlay.body.innerHTML = ''\n      setTitle(compileErrorTitle)\n      const errorEl = renderError(compileError)\n      overlay.body.appendChild(errorEl)\n      show()\n    } else if (errors.length > 0) {\n      overlay.body.innerHTML = ''\n      setTitle(errorsTitle)\n      errors.forEach(({ title, message }) => {\n        const errorEl = renderError(message, title)\n        overlay.body.appendChild(errorEl)\n      })\n      show()\n    } else {\n      hide()\n    }\n  }\n\n  const renderError = (message, title) => {\n    const div = document.createElement('div')\n    if (title) {\n      const h2 = document.createElement('h2')\n      h2.textContent = title\n      h2.style = style.h2\n      div.appendChild(h2)\n    }\n    const pre = document.createElement('pre')\n    pre.textContent = message\n    div.appendChild(pre)\n    return div\n  }\n\n  const addError = (error, title) => {\n    const message = (error && error.stack) || error\n    errors.push({ title, message })\n    update()\n  }\n\n  const clearErrors = () => {\n    errors.forEach(({ element }) => {\n      removeElement(element)\n    })\n    errors = []\n    update()\n  }\n\n  const setCompileError = message => {\n    compileError = message\n    update()\n  }\n\n  const overlay = createOverlay()\n\n  return {\n    addError,\n    clearErrors,\n    setCompileError,\n  }\n}\n\nexport default ErrorOverlay\n","/* global window, document */\nimport * as svelteInternal from 'svelte/internal'\n// NOTE from 3.38.3 (or so), insert was carrying the hydration logic, that must\n// be used because DOM elements are reused more (and so insertion points are not\n// necessarily added in order); then in 3.40 the logic was moved to\n// insert_hydration, which is the one we must use for HMR\nconst svelteInsert = svelteInternal.insert_hydration || svelteInternal.insert\nif (!svelteInsert) {\n  throw new Error(\n    'failed to find insert_hydration and insert in svelte/internal'\n  )\n}\n\nimport ErrorOverlay from './overlay.js'\n\nconst removeElement = el => el && el.parentNode && el.parentNode.removeChild(el)\n\nexport const adapter = class ProxyAdapterDom {\n  constructor(instance) {\n    this.instance = instance\n    this.insertionPoint = null\n\n    this.afterMount = this.afterMount.bind(this)\n    this.rerender = this.rerender.bind(this)\n\n    this._noOverlay = !!instance.hotOptions.noOverlay\n  }\n\n  // NOTE overlay is only created before being actually shown to help test\n  // runner (it won't have to account for error overlay when running assertions\n  // about the contents of the rendered page)\n  static getErrorOverlay(noCreate = false) {\n    if (!noCreate && !this.errorOverlay) {\n      this.errorOverlay = ErrorOverlay()\n    }\n    return this.errorOverlay\n  }\n\n  // TODO this is probably unused now: remove in next breaking release\n  static renderCompileError(message) {\n    const noCreate = !message\n    const overlay = this.getErrorOverlay(noCreate)\n    if (!overlay) return\n    overlay.setCompileError(message)\n  }\n\n  dispose() {\n    // Component is being destroyed, detaching is not optional in Svelte3's\n    // component API, so we can dispose of the insertion point in every case.\n    if (this.insertionPoint) {\n      removeElement(this.insertionPoint)\n      this.insertionPoint = null\n    }\n    this.clearError()\n  }\n\n  // NOTE afterMount CAN be called multiple times (e.g. keyed list)\n  afterMount(target, anchor) {\n    const {\n      instance: { debugName },\n    } = this\n    if (!this.insertionPoint) {\n      this.insertionPoint = document.createComment(debugName)\n    }\n    svelteInsert(target, this.insertionPoint, anchor)\n  }\n\n  rerender() {\n    this.clearError()\n    const {\n      instance: { refreshComponent },\n      insertionPoint,\n    } = this\n    if (!insertionPoint) {\n      throw new Error('Cannot rerender: missing insertion point')\n    }\n    refreshComponent(insertionPoint.parentNode, insertionPoint)\n  }\n\n  renderError(err) {\n    if (this._noOverlay) return\n    const {\n      instance: { debugName },\n    } = this\n    const title = debugName || err.moduleName || 'Error'\n    this.constructor.getErrorOverlay().addError(err, title)\n  }\n\n  clearError() {\n    if (this._noOverlay) return\n    const overlay = this.constructor.getErrorOverlay(true)\n    if (!overlay) return\n    overlay.clearErrors()\n  }\n}\n\n// TODO this is probably unused now: remove in next breaking release\nif (typeof window !== 'undefined') {\n  window.__SVELTE_HMR_ADAPTER = adapter\n}\n\n// mitigate situation with Snowpack remote source pulling latest of runtime,\n// but using previous version of the Node code transform in the plugin\n// see: https://github.com/rixo/svelte-hmr/issues/27\nexport default adapter\n","/* eslint-env browser */\n/**\n * The HMR proxy is a component-like object whose task is to sit in the\n * component tree in place of the proxied component, and rerender each\n * successive versions of said component.\n */\n\nimport { createProxiedComponent } from './svelte-hooks.js'\n\nconst handledMethods = ['constructor', '$destroy']\nconst forwardedMethods = ['$set', '$on']\n\nconst logError = (msg, err) => {\n  // eslint-disable-next-line no-console\n  console.error('[HMR][Svelte]', msg)\n  if (err) {\n    // NOTE avoid too much wrapping around user errors\n    // eslint-disable-next-line no-console\n    console.error(err)\n  }\n}\n\nconst posixify = file => file.replace(/[/\\\\]/g, '/')\n\nconst getBaseName = id =>\n  id\n    .split('/')\n    .pop()\n    .split('.')\n    .slice(0, -1)\n    .join('.')\n\nconst capitalize = str => str[0].toUpperCase() + str.slice(1)\n\nconst getFriendlyName = id => capitalize(getBaseName(posixify(id)))\n\nconst getDebugName = id => `<${getFriendlyName(id)}>`\n\nconst relayCalls = (getTarget, names, dest = {}) => {\n  for (const key of names) {\n    dest[key] = function(...args) {\n      const target = getTarget()\n      if (!target) {\n        return\n      }\n      return target[key] && target[key].call(this, ...args)\n    }\n  }\n  return dest\n}\n\nconst isInternal = key => key !== '$$' && key.slice(0, 2) === '$$'\n\n// This is intented as a somewhat generic / prospective fix to the situation\n// that arised with the introduction of $$set in Svelte 3.24.1 -- trying to\n// avoid giving full knowledge (like its name) of this implementation detail\n// to the proxy. The $$set method can be present or not on the component, and\n// its presence impacts the behaviour (but with HMR it will be tested if it is\n// present _on the proxy_). So the idea here is to expose exactly the same $$\n// props as the current version of the component and, for those that are\n// functions, proxy the calls to the current component.\nconst relayInternalMethods = (proxy, cmp) => {\n  // delete any previously added $$ prop\n  Object.keys(proxy)\n    .filter(isInternal)\n    .forEach(key => {\n      delete proxy[key]\n    })\n  // guard: no component\n  if (!cmp) return\n  // proxy current $$ props to the actual component\n  Object.keys(cmp)\n    .filter(isInternal)\n    .forEach(key => {\n      Object.defineProperty(proxy, key, {\n        configurable: true,\n        get() {\n          const value = cmp[key]\n          if (typeof value !== 'function') return value\n          return (\n            value &&\n            function(...args) {\n              return value.apply(this, args)\n            }\n          )\n        },\n      })\n    })\n}\n\n// proxy custom methods\nconst copyComponentProperties = (proxy, cmp, previous) => {\n  if (previous) {\n    previous.forEach(prop => {\n      delete proxy[prop]\n    })\n  }\n\n  const props = Object.getOwnPropertyNames(Object.getPrototypeOf(cmp))\n  const wrappedProps = props.filter(prop => {\n    if (!handledMethods.includes(prop) && !forwardedMethods.includes(prop)) {\n      Object.defineProperty(proxy, prop, {\n        configurable: true,\n        get() {\n          return cmp[prop]\n        },\n        set(value) {\n          // we're changing it on the real component first to see what it\n          // gives... if it throws an error, we want to throw the same error in\n          // order to most closely follow non-hmr behaviour.\n          cmp[prop] = value\n        },\n      })\n      return true\n    }\n  })\n\n  return wrappedProps\n}\n\n// everything in the constructor!\n//\n// so we don't polute the component class with new members\n//\nclass ProxyComponent {\n  constructor(\n    {\n      Adapter,\n      id,\n      debugName,\n      current, // { Component, hotOptions: { preserveLocalState, ... } }\n      register,\n    },\n    options // { target, anchor, ... }\n  ) {\n    let cmp\n    let disposed = false\n    let lastError = null\n\n    const setComponent = _cmp => {\n      cmp = _cmp\n      relayInternalMethods(this, cmp)\n    }\n\n    const getComponent = () => cmp\n\n    const destroyComponent = () => {\n      // destroyComponent is tolerant (don't crash on no cmp) because it\n      // is possible that reload/rerender is called after a previous\n      // createComponent has failed (hence we have a proxy, but no cmp)\n      if (cmp) {\n        cmp.$destroy()\n        setComponent(null)\n      }\n    }\n\n    const refreshComponent = (target, anchor, conservativeDestroy) => {\n      if (lastError) {\n        lastError = null\n        adapter.rerender()\n      } else {\n        try {\n          const replaceOptions = {\n            target,\n            anchor,\n            preserveLocalState: current.preserveLocalState,\n          }\n          if (conservativeDestroy) {\n            replaceOptions.conservativeDestroy = true\n          }\n          cmp.$replace(current.Component, replaceOptions)\n        } catch (err) {\n          setError(err, target, anchor)\n          if (\n            !current.hotOptions.optimistic ||\n            // non acceptable components (that is components that have to defer\n            // to their parent for rerender -- e.g. accessors, named exports)\n            // are most tricky, and they havent been considered when most of the\n            // code has been written... as a result, they are especially tricky\n            // to deal with, it's better to consider any error with them to be\n            // fatal to avoid odities\n            !current.canAccept ||\n            (err && err.hmrFatal)\n          ) {\n            throw err\n          } else {\n            // const errString = String((err && err.stack) || err)\n            logError(`Error during component init: ${debugName}`, err)\n          }\n        }\n      }\n    }\n\n    const setError = err => {\n      lastError = err\n      adapter.renderError(err)\n    }\n\n    const instance = {\n      hotOptions: current.hotOptions,\n      proxy: this,\n      id,\n      debugName,\n      refreshComponent,\n    }\n\n    const adapter = new Adapter(instance)\n\n    const { afterMount, rerender } = adapter\n\n    // $destroy is not called when a child component is disposed, so we\n    // need to hook from fragment.\n    const onDestroy = () => {\n      // NOTE do NOT call $destroy on the cmp from here; the cmp is already\n      //   dead, this would not work\n      if (!disposed) {\n        disposed = true\n        adapter.dispose()\n        unregister()\n      }\n    }\n\n    // ---- register proxy instance ----\n\n    const unregister = register(rerender)\n\n    // ---- augmented methods ----\n\n    this.$destroy = () => {\n      destroyComponent()\n      onDestroy()\n    }\n\n    // ---- forwarded methods ----\n\n    relayCalls(getComponent, forwardedMethods, this)\n\n    // ---- create & mount target component instance ---\n\n    try {\n      let lastProperties\n      createProxiedComponent(current.Component, options, {\n        allowLiveBinding: current.hotOptions.allowLiveBinding,\n        onDestroy,\n        onMount: afterMount,\n        onInstance: comp => {\n          setComponent(comp)\n          // WARNING the proxy MUST use the same $$ object as its component\n          // instance, because a lot of wiring happens during component\n          // initialisation... lots of references to $$ and $$.fragment have\n          // already been distributed around when the component constructor\n          // returns, before we have a chance to wrap them (and so we can't\n          // wrap them no more, because existing references would become\n          // invalid)\n          this.$$ = comp.$$\n          lastProperties = copyComponentProperties(this, comp, lastProperties)\n        },\n      })\n    } catch (err) {\n      const { target, anchor } = options\n      setError(err, target, anchor)\n      throw err\n    }\n  }\n}\n\nconst syncStatics = (component, proxy, previousKeys) => {\n  // remove previously copied keys\n  if (previousKeys) {\n    for (const key of previousKeys) {\n      delete proxy[key]\n    }\n  }\n\n  // forward static properties and methods\n  const keys = []\n  for (const key in component) {\n    keys.push(key)\n    proxy[key] = component[key]\n  }\n\n  return keys\n}\n\nconst globalListeners = {}\n\nconst onGlobal = (event, fn) => {\n  event = event.toLowerCase()\n  if (!globalListeners[event]) globalListeners[event] = []\n  globalListeners[event].push(fn)\n}\n\nconst fireGlobal = (event, ...args) => {\n  const listeners = globalListeners[event]\n  if (!listeners) return\n  for (const fn of listeners) {\n    fn(...args)\n  }\n}\n\nconst fireBeforeUpdate = () => fireGlobal('beforeupdate')\n\nconst fireAfterUpdate = () => fireGlobal('afterupdate')\n\nif (typeof window !== 'undefined') {\n  window.__SVELTE_HMR = {\n    on: onGlobal,\n  }\n  window.dispatchEvent(new CustomEvent('svelte-hmr:ready'))\n}\n\nlet fatalError = false\n\nexport const hasFatalError = () => fatalError\n\n/**\n * Creates a HMR proxy and its associated `reload` function that pushes a new\n * version to all existing instances of the component.\n */\nexport function createProxy({\n  Adapter,\n  id,\n  Component,\n  hotOptions,\n  canAccept,\n  preserveLocalState,\n}) {\n  const debugName = getDebugName(id)\n  const instances = []\n\n  // current object will be updated, proxy instances will keep a ref\n  const current = {\n    Component,\n    hotOptions,\n    canAccept,\n    preserveLocalState,\n  }\n\n  const name = `Proxy${debugName}`\n\n  // this trick gives the dynamic name Proxy<MyComponent> to the concrete\n  // proxy class... unfortunately, this doesn't shows in dev tools, but\n  // it stills allow to inspect cmp.constructor.name to confirm an instance\n  // is a proxy\n  const proxy = {\n    [name]: class extends ProxyComponent {\n      constructor(options) {\n        try {\n          super(\n            {\n              Adapter,\n              id,\n              debugName,\n              current,\n              register: rerender => {\n                instances.push(rerender)\n                const unregister = () => {\n                  const i = instances.indexOf(rerender)\n                  instances.splice(i, 1)\n                }\n                return unregister\n              },\n            },\n            options\n          )\n        } catch (err) {\n          // If we fail to create a proxy instance, any instance, that means\n          // that we won't be able to fix this instance when it is updated.\n          // Recovering to normal state will be impossible. HMR's dead.\n          //\n          // Fatal error will trigger a full reload on next update (reloading\n          // right now is kinda pointless since buggy code still exists).\n          //\n          // NOTE Only report first error to avoid too much polution -- following\n          // errors are probably caused by the first one, or they will show up\n          // in turn when the first one is fixed ¯\\_(ツ)_/¯\n          //\n          if (!fatalError) {\n            fatalError = true\n            logError(\n              `Unrecoverable HMR error in ${debugName}: ` +\n                `next update will trigger a full reload`\n            )\n          }\n          throw err\n        }\n      }\n    },\n  }[name]\n\n  // initialize static members\n  let previousStatics = syncStatics(current.Component, proxy)\n\n  const update = newState => Object.assign(current, newState)\n\n  // reload all existing instances of this component\n  const reload = () => {\n    fireBeforeUpdate()\n\n    // copy statics before doing anything because a static prop/method\n    // could be used somewhere in the create/render call\n    previousStatics = syncStatics(current.Component, proxy, previousStatics)\n\n    const errors = []\n\n    instances.forEach(rerender => {\n      try {\n        rerender()\n      } catch (err) {\n        logError(`Failed to rerender ${debugName}`, err)\n        errors.push(err)\n      }\n    })\n\n    if (errors.length > 0) {\n      return false\n    }\n\n    fireAfterUpdate()\n\n    return true\n  }\n\n  const hasFatalError = () => fatalError\n\n  return { id, proxy, update, reload, hasFatalError, current }\n}\n","/**\n * Emulates forthcoming HMR hooks in Svelte.\n *\n * All references to private component state ($$) are now isolated in this\n * module.\n */\nimport {\n  current_component,\n  get_current_component,\n  set_current_component,\n} from 'svelte/internal'\n\nconst captureState = cmp => {\n  // sanity check: propper behaviour here is to crash noisily so that\n  // user knows that they're looking at something broken\n  if (!cmp) {\n    throw new Error('Missing component')\n  }\n  if (!cmp.$$) {\n    throw new Error('Invalid component')\n  }\n\n  const {\n    $$: { callbacks, bound, ctx, props },\n  } = cmp\n\n  const state = cmp.$capture_state()\n\n  // capturing current value of props (or we'll recreate the component with the\n  // initial prop values, that may have changed -- and would not be reflected in\n  // options.props)\n  const hmr_props_values = {}\n  Object.keys(cmp.$$.props).forEach(prop => {\n    hmr_props_values[prop] = ctx[props[prop]]\n  })\n\n  return {\n    ctx,\n    props,\n    callbacks,\n    bound,\n    state,\n    hmr_props_values,\n  }\n}\n\n// remapping all existing bindings (including hmr_future_foo ones) to the\n// new version's props indexes, and refresh them with the new value from\n// context\nconst restoreBound = (cmp, restore) => {\n  // reverse prop:ctxIndex in $$.props to ctxIndex:prop\n  //\n  // ctxIndex can be either a regular index in $$.ctx or a hmr_future_ prop\n  //\n  const propsByIndex = {}\n  for (const [name, i] of Object.entries(restore.props)) {\n    propsByIndex[i] = name\n  }\n\n  // NOTE $$.bound cannot change in the HMR lifetime of a component, because\n  //      if bindings changes, that means the parent component has changed,\n  //      which means the child (current) component will be wholly recreated\n  for (const [oldIndex, updateBinding] of Object.entries(restore.bound)) {\n    // can be either regular prop, or future_hmr_ prop\n    const propName = propsByIndex[oldIndex]\n\n    // this should never happen if remembering of future props is enabled...\n    // in any case, there's nothing we can do about it if we have lost prop\n    // name knowledge at this point\n    if (propName == null) continue\n\n    // NOTE $$.props[propName] also propagates knowledge of a possible\n    //      future prop to the new $$.props (via $$.props being a Proxy)\n    const newIndex = cmp.$$.props[propName]\n    cmp.$$.bound[newIndex] = updateBinding\n\n    // NOTE if the prop doesn't exist or doesn't exist anymore in the new\n    //      version of the component, clearing the binding is the expected\n    //      behaviour (since that's what would happen in non HMR code)\n    const newValue = cmp.$$.ctx[newIndex]\n    updateBinding(newValue)\n  }\n}\n\n// restoreState\n//\n// It is too late to restore context at this point because component instance\n// function has already been called (and so context has already been read).\n// Instead, we rely on setting current_component to the same value it has when\n// the component was first rendered -- which fix support for context, and is\n// also generally more respectful of normal operation.\n//\nconst restoreState = (cmp, restore) => {\n  if (!restore) return\n\n  if (restore.callbacks) {\n    cmp.$$.callbacks = restore.callbacks\n  }\n\n  if (restore.bound) {\n    restoreBound(cmp, restore)\n  }\n\n  // props, props.$$slots are restored at component creation (works\n  // better -- well, at all actually)\n}\n\nconst get_current_component_safe = () => {\n  // NOTE relying on dynamic bindings (current_component) makes us dependent on\n  // bundler config (and apparently it does not work in demo-svelte-nollup)\n  try {\n    // unfortunately, unlike current_component, get_current_component() can\n    // crash in the normal path (when there is really no parent)\n    return get_current_component()\n  } catch (err) {\n    // ... so we need to consider that this error means that there is no parent\n    //\n    // that makes us tightly coupled to the error message but, at least, we\n    // won't mute an unexpected error, which is quite a horrible thing to do\n    if (err.message === 'Function called outside component initialization') {\n      // who knows...\n      return current_component\n    } else {\n      throw err\n    }\n  }\n}\n\nexport const createProxiedComponent = (\n  Component,\n  initialOptions,\n  { allowLiveBinding, onInstance, onMount, onDestroy }\n) => {\n  let cmp\n  let options = initialOptions\n\n  const isCurrent = _cmp => cmp === _cmp\n\n  const assignOptions = (target, anchor, restore, preserveLocalState) => {\n    const props = Object.assign({}, options.props)\n\n    // Filtering props to avoid \"unexpected prop\" warning\n    // NOTE this is based on props present in initial options, but it should\n    //      always works, because props that are passed from the parent can't\n    //      change without a code change to the parent itself -- hence, the\n    //      child component will be fully recreated, and initial options should\n    //      always represent props that are currnetly passed by the parent\n    if (options.props && restore.hmr_props_values) {\n      for (const prop of Object.keys(options.props)) {\n        if (restore.hmr_props_values.hasOwnProperty(prop)) {\n          props[prop] = restore.hmr_props_values[prop]\n        }\n      }\n    }\n\n    if (preserveLocalState && restore.state) {\n      if (Array.isArray(preserveLocalState)) {\n        // form ['a', 'b'] => preserve only 'a' and 'b'\n        props.$$inject = {}\n        for (const key of preserveLocalState) {\n          props.$$inject[key] = restore.state[key]\n        }\n      } else {\n        props.$$inject = restore.state\n      }\n    } else {\n      delete props.$$inject\n    }\n    options = Object.assign({}, initialOptions, {\n      target,\n      anchor,\n      props,\n      hydrate: false,\n    })\n  }\n\n  // Preserving knowledge of \"future props\" -- very hackish version (maybe\n  // there should be an option to opt out of this)\n  //\n  // The use case is bind:something where something doesn't exist yet in the\n  // target component, but comes to exist later, after a HMR update.\n  //\n  // If Svelte can't map a prop in the current version of the component, it\n  // will just completely discard it:\n  // https://github.com/sveltejs/svelte/blob/1632bca34e4803d6b0e0b0abd652ab5968181860/src/runtime/internal/Component.ts#L46\n  //\n  const rememberFutureProps = cmp => {\n    if (typeof Proxy === 'undefined') return\n\n    cmp.$$.props = new Proxy(cmp.$$.props, {\n      get(target, name) {\n        if (target[name] === undefined) {\n          target[name] = 'hmr_future_' + name\n        }\n        return target[name]\n      },\n      set(target, name, value) {\n        target[name] = value\n      },\n    })\n  }\n\n  const instrument = targetCmp => {\n    const createComponent = (Component, restore, previousCmp) => {\n      set_current_component(parentComponent || previousCmp)\n      const comp = new Component(options)\n      // NOTE must be instrumented before restoreState, because restoring\n      // bindings relies on hacked $$.props\n      instrument(comp)\n      restoreState(comp, restore)\n      return comp\n    }\n\n    rememberFutureProps(targetCmp)\n\n    targetCmp.$$.on_hmr = []\n\n    // `conservative: true` means we want to be sure that the new component has\n    // actually been successfuly created before destroying the old instance.\n    // This could be useful for preventing runtime errors in component init to\n    // bring down the whole HMR. Unfortunately the implementation bellow is\n    // broken (FIXME), but that remains an interesting target for when HMR hooks\n    // will actually land in Svelte itself.\n    //\n    // The goal would be to render an error inplace in case of error, to avoid\n    // losing the navigation stack (especially annoying in native, that is not\n    // based on URL navigation, so we lose the current page on each error).\n    //\n    targetCmp.$replace = (\n      Component,\n      {\n        target = options.target,\n        anchor = options.anchor,\n        preserveLocalState,\n        conservative = false,\n      }\n    ) => {\n      const restore = captureState(targetCmp)\n      assignOptions(\n        target || options.target,\n        anchor,\n        restore,\n        preserveLocalState\n      )\n\n      const callbacks = cmp ? cmp.$$.on_hmr : []\n\n      const afterCallbacks = callbacks.map(fn => fn(cmp)).filter(Boolean)\n\n      const previous = cmp\n      if (conservative) {\n        try {\n          const next = createComponent(Component, restore, previous)\n          // prevents on_destroy from firing on non-final cmp instance\n          cmp = null\n          previous.$destroy()\n          cmp = next\n        } catch (err) {\n          cmp = previous\n          throw err\n        }\n      } else {\n        // prevents on_destroy from firing on non-final cmp instance\n        cmp = null\n        if (previous) {\n          // previous can be null if last constructor has crashed\n          previous.$destroy()\n        }\n        cmp = createComponent(Component, restore, cmp)\n      }\n\n      cmp.$$.hmr_cmp = cmp\n\n      for (const fn of afterCallbacks) {\n        fn(cmp)\n      }\n\n      cmp.$$.on_hmr = callbacks\n\n      return cmp\n    }\n\n    // NOTE onMount must provide target & anchor (for us to be able to determinate\n    // \t\t\tactual DOM insertion point)\n    //\n    // \t\t\tAnd also, to support keyed list, it needs to be called each time the\n    // \t\t\tcomponent is moved (same as $$.fragment.m)\n    if (onMount) {\n      const m = targetCmp.$$.fragment.m\n      targetCmp.$$.fragment.m = (...args) => {\n        const result = m(...args)\n        onMount(...args)\n        return result\n      }\n    }\n\n    // NOTE onDestroy must be called even if the call doesn't pass through the\n    //      component's $destroy method (that we can hook onto by ourselves, since\n    //      it's public API) -- this happens a lot in svelte's internals, that\n    //      manipulates cmp.$$.fragment directly, often binding to fragment.d,\n    //      for example\n    if (onDestroy) {\n      targetCmp.$$.on_destroy.push(() => {\n        if (isCurrent(targetCmp)) {\n          onDestroy()\n        }\n      })\n    }\n\n    if (onInstance) {\n      onInstance(targetCmp)\n    }\n\n    // Svelte 3 creates and mount components from their constructor if\n    // options.target is present.\n    //\n    // This means that at this point, the component's `fragment.c` and,\n    // most notably, `fragment.m` will already have been called _from inside\n    // createComponent_. That is: before we have a chance to hook on it.\n    //\n    // Proxy's constructor\n    //   -> createComponent\n    //     -> component constructor\n    //       -> component.$$.fragment.c(...) (or l, if hydrate:true)\n    //       -> component.$$.fragment.m(...)\n    //\n    //   -> you are here <-\n    //\n    if (onMount) {\n      const { target, anchor } = options\n      if (target) {\n        onMount(target, anchor)\n      }\n    }\n  }\n\n  const parentComponent = allowLiveBinding\n    ? current_component\n    : get_current_component_safe()\n\n  cmp = new Component(options)\n  cmp.$$.hmr_cmp = cmp\n\n  instrument(cmp)\n\n  return cmp\n}\n","<script lang=\"ts\">\n    import Brett from \"./brett/Brett.svelte\";\n    import Status from \"./Status.svelte\";\n    import OverlayBase from \"./Overlays/OverlayBase.svelte\";\n    import Stellung_Overlay from \"./Overlays/Stellung_Overlay.svelte\";\n    import Final_Overlay from \"./Overlays/Final_Overlay.svelte\";\n    import Automatenauswahl from \"./Automatenauswahl.svelte\";\n    import Statistik from \"./Statistik.svelte\";\n    import Togre from \"./Togre.svelte\";\n    \n    import { onMount, onDestroy } from \"svelte\";\n    import type { Unsubscriber } from \"svelte/store\";\n\n    import H from \"../core\";\n    import run from \"../auto\";\n    import { view, stellung, amZug, overlay, hist, final, action, state, auto_X, auto_O, auto_working, auto_auto, auto_wait, classicView, vorschlagRechnen, shouldValidate, mode, lastMovTarget } from \"../stores\";\n    import {download} from \"../tools\";\n\n    let selected = -1;\n\n    let hover = -1;\n\n    let brett: Brett;\n    let brettSize = 600;\n    let feldnummern: \"alnum\" | \"num\" | \"coord\" | \"chess\" | \"\" = \"num\";\n    let turn = false;\n\n    const unsubscribers = [] as Unsubscriber[];\n\n    unsubscribers.push(final.subscribe(f => {\n        if (f) reportFinal(f);\n    }));\n    unsubscribers.push(view.subscribe(v => {\n        if (v === \"std\") mode.set(\"spiel\");\n    }));\n\n    onDestroy(() => unsubscribers.forEach(u => u()));\n\n    function reportFinal (f: H.Final | \"\") {\n        console.log(\"🎉 Spielende: \" + f);\n        $overlay = \"final\";\n    }\n\n    function autoCheck () {\n        if ($final) return;\n        const auto = ($amZug.x) ? $auto_X : $auto_O;\n        if (auto) {\n            $auto_working = $amZug.c;\n            run($stellung, $amZug, auto, ($auto_wait * 1000) + 500).then(antwort => {\n                $auto_working = \"\";\n                $stellung = antwort.ziel;\n                $amZug = $amZug.t;\n                $lastMovTarget = antwort.to;\n                hist.add($stellung, $amZug);\n                if ($auto_auto) autoCheck();\n            }, reason => {\n                console.error(\"Das Promise von Auto.run wurde rejected. Reason folgt als throw.\");\n                throw reason;\n            });\n        }\n    }\n\n    function handleKeyup (event: KeyboardEvent) {\n        if (event.target instanceof HTMLInputElement && (<HTMLInputElement>event.target).type === \"text\") return;\n        switch (event.key) {\n            case \"s\": {\n                if ($state === \"aktiv\") return;\n                if ($overlay === \"none\" && $view !== \"std\") $overlay = \"stellung\";\n                break;\n            }\n            case \"t\": {\n                if ($state === \"aktiv\") return;\n                if ($view !== \"std\") tauschen();\n                break;\n            }\n            case \"z\": {\n                if ($state === \"aktiv\") return;\n                brett.undo();\n                break;\n            }\n            case \"1\": {\n                if ($view !== \"std\" && event.ctrlKey) $mode = \"spiel\";\n                break;\n            }\n            case \"2\": {\n                if ($view !== \"std\" && event.ctrlKey) $mode = \"stat\";\n                break;\n            }\n            case \"3\": {\n                if ($view !== \"std\" && event.ctrlKey) $mode = \"togre\";\n                break;\n            }\n        }\n    }\n\n    function tauschen () {\n        $amZug = $amZug.t;\n        hist.add($stellung, $amZug);\n    }\n\n    function blur (event: Event) {\n        (<HTMLElement>event.target).blur();\n    }\n\n</script>\n\n<Status\n    action = {$action}\n    bind:selected\n    bind:hover\n    {tauschen}\n/>\n<div id=\"ROOT_L\" class=\"ROOT\">\n\n    <!-- svelte-ignore security-anchor-rel-noreferrer -->\n    <a\n        href={document.location.href + `?s=${H.convert.c($stellung)}&p=${$amZug.c}`}\n        target=\"_blank\"\n        style=\"display: block; border: 1px solid white; border-radius: 5px; padding: 4px; background-color: white; margin-bottom: 10px;\"\n    >Neues Fenster</a>\n    \n    Ansicht: <select bind:value={$view} disabled={$state === \"aktiv\"} on:input={blur}>\n        <option value=\"std\">Normal</option>\n        <option value=\"dev\">Entwickler</option>\n        <option value=\"pro\">Programierer</option>\n    </select><br>\n    \n    <button disabled={$state === \"aktiv\"} on:click={() => brett.undo()}>Rückgängig</button><br>\n\n    {#if $view !== \"std\"}\n        <button on:click={tauschen} disabled={$state === \"aktiv\"}>Tauschen</button><br>\n        <button on:click={() => {$stellung = H.mirror($stellung)}}>Spiegeln (X-Achse)</button><br>\n\n        Modus: <select bind:value={$mode} disabled={$state === \"aktiv\"} on:input={blur}>\n            <option value=\"spiel\">Spielbrett</option>\n            <option value=\"stat\">Statistische Auswertung</option>\n            <option value=\"togre\">TOGRE-Rechner</option>\n        </select><br>\n        \n        <label><input type=\"checkbox\" disabled={$state === \"aktiv\"} bind:checked={$shouldValidate}> Ungültige Züge sperren</label><br>\n    {/if}\n    <label><input disabled={$state === \"aktiv\"} type=\"checkbox\" bind:checked={$vorschlagRechnen}> Mögliche Züge errechnen</label><br>\n    <label><input disabled={$state === \"aktiv\"} type=\"checkbox\" bind:checked={turn}> Brett drehen</label><br>\n\n    {#if $view !== \"std\"}\n        <label style=\"display:inline;\"><input disabled={$state === \"aktiv\"} type=\"checkbox\" bind:checked={$classicView}> Klassische Ansicht</label><br>\n        Feldnummern-Format: <select bind:value={feldnummern} disabled={$state === \"aktiv\"} on:input={blur}>\n            <option value=\"\">— Keine —</option>\n            <option value=\"alnum\">Alphanumerisch</option>\n            <option value=\"num\">Nummeriert</option>\n            <option value=\"coord\">Koordinaten</option>\n            <option value=\"chess\">Schach-Format</option>\n        </select>\n        <br><br>\n    {/if}\n    {#if $view === \"pro\" && $state !== \"aktiv\"}\n        <!-- <hr>\n        Halbkreis mit dem Grenzwert 9 über der Startstellung berechnen, als JSON kodieren und herunterladen:<br>\n        <button on:click={halbkreisgenerator}>Start</button> -->\n        <!-- <hr>\n        <button on:click={() => console.log($hist.map(e => e.stellung + \" \" + e.amZug + \" \" + e.auto))}>Log Hist</button>\n        <button on:click={() => console.log($final)}>Log Final</button>\n        <button on:click={() => console.log($overlay)}>Log Overlay</button>\n        <button on:click={() => console.log([$auto_X, $auto_O])}>Log Autos</button>\n        <button on:click={() => console.log($auto_working)}>Log store \"auto_working\"</button>\n        <button on:click={() => console.log($auto_wait)}>Log store \"auto_wait\"</button>\n        <button on:click={() => console.log($mode)}>Log store \"mode\"</button>\n        <button on:click={() => console.log(feldnummern)}>Log feldnummern</button> -->\n    {/if}\n</div>\n<div id=\"ROOT_M\" class=\"ROOT\">\n    <div class=\"M_tool__\" class:M_tool__idle={$mode !== \"spiel\"}>\n        <Brett\n            bind:this       = {brett}\n            classic         = {$classicView}\n            vorschlag       = {true}\n            bind:selected\n            bind:size       = {brettSize}\n            bind:hover\n            on:userzug={() => ($auto_auto ? autoCheck() : undefined)}\n            {feldnummern}\n            turn            = {turn}\n        />\n    </div>\n    <div class=\"M_tool__\" class:M_tool__idle={$mode !== \"stat\"}>\n        <Statistik />\n    </div>\n    <div class=\"M_tool__\" class:M_tool__idle={$mode !== \"togre\"}>\n        <Togre />\n    </div>\n</div>\n<div id=\"ROOT_R\" class=\"ROOT\">\n    <Automatenauswahl on:autoCheck={autoCheck}/>\n</div>\n\n{#if $overlay === \"test\"}\n    <OverlayBase\n        width={500}\n    >\n        Test-Overlay\n        <input type=\"text\">\n    </OverlayBase>\n{/if}\n{#if $overlay === \"stellung\"}\n    <Stellung_Overlay/>\n{/if}\n{#if $overlay === \"final\"}\n    <Final_Overlay\n        final = {$final}\n    ></Final_Overlay>\n{/if}\n\n<svelte:window on:keyup={handleKeyup}></svelte:window>\n\n<style>\n    * {\n        box-sizing: border-box;\n    }\n    .ROOT {\n        float: left;\n        height: calc(100% - 45px);\n        overflow: scroll;\n        background-color: #222;\n        color: white;\n    }\n    #ROOT_M {\n        width: 650px;\n        /* border: 5px dotted green; */\n    }\n    #ROOT_L, #ROOT_R {\n        width: calc(50% - 325px);\n        padding: 10px;\n        /* min-width: 160px; */\n    }\n    #ROOT_L {\n        border-right: 1px solid black;\n    }\n    #ROOT_R {\n        border-left: 1px solid black;\n    }\n    .M_tool__ {\n        padding: 10px;\n    }\n    .M_tool__idle {\n        display: none;\n    }\n    #ROOT_L label {\n        display: inline;\n    }\n</style>","<script lang=\"ts\">\n    import { createEventDispatcher } from \"svelte\";\n    const dispatch = createEventDispatcher();\n    import type { Autocode } from \"../auto\";\n    import { info, autocodes } from \"../auto\";\n    import { auto_auto, auto_O, auto_wait, auto_working, auto_X, overlay, state } from \"../stores\";\n    import OverlayBase from \"./Overlays/OverlayBase.svelte\";\n\n    function requestAutoCheck () {\n        dispatch(\"autoCheck\");\n    }\n\n    let autos = {\n        x: \"\" as \"\" | Autocode,\n        o: \"\" as \"\" | Autocode\n    }\n\n    let visibleInfo = \"X\";\n\n    function showInfo (playercode: string) {\n        if (playercode === \"X\" && ! $auto_X) return;\n        else if (playercode === \"O\" && ! $auto_O) return;\n        else {\n            $overlay = \"auto_info\";\n            visibleInfo = playercode;\n        }\n    }\n\n    let timeout = setTimeout(() => {});\n    clearTimeout(timeout);\n    function checkWartezeit () {\n        if (wartezeit.value === \"\") {\n            timeout = setTimeout(() => {\n                $auto_wait = 0;\n                wartezeit.value = String($auto_wait);\n            }, 2000);\n            return;\n        }\n        else {\n            if (timeout) clearTimeout(timeout);\n            wartezeit.value = wartezeit.value.split(\"\").filter(c => c.match(/[\\d]/)).join(\"\");\n            // if (! Number(wartezeit.value)) wartezeit.value = \"1\";\n        }\n        $auto_wait = Number(wartezeit.value);\n    }\n\n    let wartezeit: HTMLInputElement;\n\n    function blur (event: Event) {\n        (<HTMLElement>event.target).blur();\n    }\n</script>\n\n<h2>Automatenauswahl</h2>\n\n<!-- {#each [\"x\", \"o\"] as playercode}\n    <h4>Für Spieler {playercode.toUpperCase()}:</h4>\n    <select bind:value={autos[playercode]}>\n        <option value=\"\">–– Kein Automat ––</option>\n        {#each autocodes as c}\n            <option value={c} title={info[c].title}>{c}</option>\n        {/each}\n    </select>\n    <button disabled={! autos[playercode]} class=\"info\" on:click={() => showInfo(playercode)}>i</button>\n    <br>\n{/each} -->\n\n<h4>Für Spieler X:</h4>\n<select disabled={$state === \"aktiv\"} bind:value={$auto_X} on:input={blur}>\n    <option value=\"\">— Kein Automat —</option>\n    {#each autocodes as c}\n        {#if info[c].display}\n            <option value={c} title={info[c].title}>{c}</option>\n        {/if}\n    {/each}\n</select>\n<button disabled={$state === \"aktiv\" || ! $auto_X} class=\"info\" on:click={() => showInfo(\"X\")}>i</button>\n<br>\n\n<h4>Für Spieler O:</h4>\n<select disabled={$state === \"aktiv\"} bind:value={$auto_O} on:input={blur}>\n    <option value=\"\">— Kein Automat —</option>\n    {#each autocodes as c}\n        {#if info[c].display}\n            <option value={c} title={info[c].title}>{c}</option>\n        {/if}\n    {/each}\n</select>\n<button disabled={$state === \"aktiv\" || ! $auto_O} class=\"info\" on:click={() => showInfo(\"O\")}>i</button>\n<br><hr>\n\n<!-- Wartezeit: <input bind:this={wartezeit} disabled={$state === \"aktiv\"} type=\"number\" min={1} step={1} bind:value={$auto_wait} style=\"width: 70px;\" on:input={checkWartezeit}><br> -->\nWartezeit: <input type=\"text\" value=\"0\" bind:this={wartezeit} disabled={$state === \"aktiv\"} style=\"width: 70px;\" on:input={checkWartezeit}>\n\n<label title=\"Wenn deaktiviert, müssen Automaten mithilfe des untenstehenden Buttons manuell aufgerufen werden.\">\n    <input type=\"checkbox\" bind:checked={$auto_auto}> Automatisch ziehen\n</label>\n\n{#if $state !== \"aktiv\"}\n<button\n    on:click={requestAutoCheck}\n    title=\"Durch Klicken zieht der Automat, der für den ziehenden Spieler ausgewählt wurde.\"\n>Automaten jetzt ziehen lassen</button>\n<button on:click={() => $overlay = \"timing_info\"} title=\"Erklärung dieser beiden Elemente\">?</button>\n{/if}\n\n\n{#if $overlay === \"auto_info\"}\n    <OverlayBase>\n        {#if visibleInfo === \"X\"}\n            <h3>Automateninformationen: <code>{$auto_X}</code></h3>\n            <h1>{info[$auto_X].title}</h1>\n            <p>{info[$auto_X].description}</p>\n        {:else}\n            <h3>Automateninformationen: <code>{$auto_O}</code></h3>\n            <h1>{info[$auto_O].title}</h1>\n            <p>{info[$auto_O].description}</p>\n        {/if}\n    </OverlayBase>\n{/if}\n\n{#if $overlay === \"timing_info\"}\n    <OverlayBase width=\"max\">\n        <h3>Wie läuft das Timing der Automaten ab...</h3>\n        <h5>... und was haben die Einstellung \"Automatisch ziehen\" und der Button \"Automaten jetzt ziehen lassen\" zu bedeuten?</h5>\n        <p>\n            Es gibt drei Ereignisse, auf die ein Automat reagiert:\n        </p>\n        <ul>\n            <li>Du hast gezogen.</li>\n            <li>Ein anderer Automat hat gezogen.</li>\n            <li>Der Button \"Automaten jetzt ziehen lassen\" wurde angeklickt.</li>\n        </ul>\n        <p>\n            Tritt eines dieser drei Ereignisse ein, so zieht, wenn für den Spieler, der nun am Zug ist, ein Automat angegeben ist, dieser Automat.<br>\n            Wenn du also gegen einen Automaten spielst, zieht dieser immer, nachdem du gezogen hast – er reagiert automatisch. Wenn zwei Automaten gegeneinander antreten, so reagieren diese gegenseitig auf ihre Züge, und du kannst den Automaten faul beim Spielen zusehen, ohne etwas machen zu müssen...<br><br>\n            Wenn du das nicht willst, klicke oben die Option \"Automatisch ziehen\" ab. Dann reagieren Automaten weder auf deine Züge, noch auf Züge anderer Automaten. Um sie zum Ziehen zu bringen, hilft nur noch eines: Der Button \"Automaten jetzt ziehen lassen\". Wenn du also gegen einen Automaten spielst, müsstest du nach jedem deiner Züge den Button klicken, damit der Automat handelt. Willst du das wirklich? Lass die Option doch lieber angeklickt!<br><br>\n            (Der Button ist übrigens auch in anderen Situationen sinnvoll, zum Beispiel wenn du ein neues Spiel startest, und der Automat den ersten Zug machen soll.)\n        </p>\n            \n    </OverlayBase>\n{/if}\n\n<style>\n    select {\n        width: 80%;\n    }\n</style>","<script lang=\"ts\">\n\n    export let keys: string[] = [\"Ausgabe/Output\", \"Art\"];\n    // let rows: string[][] = [[\"Wert 1\", \"<b>Alt</b>\"], [\"Wert 2\", \"Neu\"]];\n    let rows: Array<string[] | string> = [];\n\n    export function log (row: string[] | string): void {\n        rows = rows.concat([row]);\n        if (typeof row !== \"string\" && row.length !== keys.length) console.warn(\"Die Anzahl der Elemente in der eingegebenen Row (\" + row.length + \") stimmt nicht mit der Anzahl der Schlüssel (\" + keys.length + \") überein. Der Output kann nicht gelogt werden.\");\n    }\n    export function clear (): void {\n        rows = [];\n    }\n</script>\n\n<div id=\"__\">\n    <table>\n        <tr>\n            {#each keys as k}\n                <th>{@html k}</th>\n            {/each}\n                \n        </tr>\n        {#each rows as row}\n            <tr>\n                {#if typeof row === \"string\"}\n                    <td colspan={keys.length}>{@html row}</td>\n                {:else}\n                    {#each row as e}\n                        <td>{@html e}</td>\n                    {/each}\n                {/if}\n            </tr>\n        {/each}\n    </table>\n</div>\n\n<style>\n    #__ {\n        font-family: 'Courier New', Courier, monospace;\n        color: black;\n        font-size: 17px;\n        padding: 10px;\n        border: 2px solid #ccc;\n        border-radius: 5px;\n        background-color: #f6ffee;\n        margin-top: 20px;\n    }\n    table {\n        border-collapse: collapse;\n        width: 100%;\n    }\n    th, td {\n        border: 1px solid #444;\n        padding: 5px;\n        text-align: center;\n    }\n</style>","<script lang=\"ts\">\n    import OverlayBase from \"./OverlayBase.svelte\";\n    import type Brett from \"../brett/Brett.svelte\";\n    \n    import H from \"../../core\";\n    import { amZug, hist, overlay, stellung } from \"../../stores\";\n    import { onMount } from \"svelte\";\n\n    export let final: string = \"R\";\n\n    function close () {\n        $overlay = \"none\"\n    }\n\n    if (! final) close();\n\n</script>\n\n<OverlayBase width={300} on:enter={close}>\n    <div style=\"text-align:center;\">\n        <h1>🎉</h1>\n        {#if final === \"X\" || final === \"O\"}\n        <h1>{final}</h1>\n        <h3>hat gewonnen.</h3>\n        {:else}\n        <h3>Das Spiel endet im </h3>\n        <h1>Remis.</h1>\n        {/if}\n    </div>\n    <button on:click={() => {\n        $stellung = H.convert.n(H.startStellung);\n        $amZug = H.Player.X;\n        hist.add($stellung, $amZug);\n        close();\n    }}>Zurück zur Startstellung</button>\n    <button on:click={close}>Okay!</button>\n</OverlayBase>","<script lang=\"ts\">\n    import { createEventDispatcher } from \"svelte\";\n    import { fade, fly } from \"svelte/transition\";\n    import { overlay } from \"../../stores\";\n    \n    export let width: number | string = \"max\";\n    const dispatch = createEventDispatcher();\n\n</script>\n\n\n\n<!-- svelte-ignore a11y-click-events-have-key-events -->\n<div\n    id=\"bg\"\n    transition:fade={{duration: 200}}\n    on:click={() => ($overlay = \"none\")}\n></div>\n<button\n    on:click={() => ($overlay = \"none\")}\n    transition:fade={{duration: 100}}\n>Schließen</button>\n<div\n    style=\"width:{(typeof width === \"number\") ? (width + \"px\") : ((width === \"max\") ? \"calc(100% - 200px)\" : width)}\"\n    id=\"content\"\n    transition:fly={{y: -40, duration: 200}}\n>\n    <slot></slot>\n</div>\n\n<svelte:window on:keyup={event => {\n    if (event.key === \"Escape\") $overlay = \"none\";\n    else if (event.key === \"Enter\") dispatch(\"enter\", {});\n}}></svelte:window>\n\n\n<style>\n    #bg {\n        position: fixed;\n        top: 45px; bottom: 0;\n        left: 0; right: 0;\n        z-index: 100;\n        background-color: #966e;\n        /* display: none; */\n    }\n    #content {\n        position: fixed;\n        top: 80px;\n        left: 50%;\n        transform: translate(-50%, 0);\n        z-index: 101;\n        padding: 20px;\n        max-height: calc(100% - 120px);\n\n        overflow: scroll;\n\n        background-color: #777;\n        color: #fff;\n        border: 1px solid #222;\n        border-radius: 10px;\n        box-shadow: 3px -3px 3px 0 #555;\n    }\n    button {\n        position: fixed;\n        top: 45px; right: 0;\n        z-index: 101;\n        background-color: #ec4545;\n        color: white;\n    }\n\n</style>","<script lang=\"ts\">\n    import OverlayBase from \"./OverlayBase.svelte\";\n    \n    import H from \"../../core\";\n    import { amZug, hist, overlay, stellung } from \"../../stores\";\n    import { onMount } from \"svelte\";\n\n    onMount(() => {input.focus(); input.select();});\n\n    function anwenden () {\n        if (!value.match(H.codePattern)) return false;\n        $stellung = H.convert.n(value);\n        $overlay = \"none\";\n        hist.add($stellung, $amZug);\n        // $hist.unshift({\n        //     stellung: H.convert.c($stellung),\n        //     amZug: $amZug\n        // });\n    }\n\n    let value = H.convert.c($stellung);\n    let input: HTMLInputElement;\n\n    function handleInput () {\n        if (value.includes(\"-\")) {\n            value = \"012345.uvwxyz\";\n        } else {\n            // nicht-valide Zeichen Löschen\n            let schonEnthalten = [] as string[];\n            value = value.split(\"\").filter((c, i) => {\n                if (c.match(/[a-z\\d\\.]/i)) {\n                    if (schonEnthalten.includes(c)) return false;\n                    else return !!schonEnthalten.push(c)\n                } else return false;\n            }).join(\"\");\n        }\n    }\n\n\n</script>\n\n<OverlayBase width={500} on:enter={anwenden}>\n    <h2>Stellungseingabe</h2>\n\n    <h4>Aktuell: {H.convert.c($stellung)}</h4>\n\n    <span>Eingabe:</span>\n    <input bind:this={input} type=\"text\" bind:value on:input={handleInput}>\n\n    <button on:click={anwenden} disabled={!value.match(H.codePattern)}>Anwenden</button>\n\n\n</OverlayBase>","<script lang=\"ts\">\n    import DevOutTable from \"./DevOutTable.svelte\";\n\n    import { Stat } from \"../auto\";\n    import { amZug, auto_O, auto_X, state, statRunning, stellung } from \"../stores\";\n    import H from \"../core\";\n\n    function start () {\n        $statRunning = true;\n        window.setTimeout(() => {\n            let stat = new Stat($stellung, $amZug, [($auto_X || \"rtf\"), ($auto_O! || \"rtf\")], [null, null], spiele || 20);\n            let output = [\n                H.convert.c($stellung) + \"<br>Player.\" + $amZug.c + \"<br><b>\" + $auto_X + \" - \" + $auto_O + \"</b><br>\" + spiele + \" Spiele\",\n                `<h3 style=\"font-size: 200%; color: red; display: inline; margin: 20px\">X:${Math.floor(stat.fx)}% O:${Math.floor(stat.fo)}% R:${Math.floor(stat.fr)}%</h3>`,\n                `min: ${stat.minlen} <br>av: ${Math.floor(stat.avlen * 100)/100} <br>max: ${stat.maxlen}`\n            ];\n            out.log(output);\n            $statRunning = false;\n        }, 1000);\n    }\n\n    \n    let spiele = 20;\n    let out: DevOutTable;\n\n</script>\n\n<h1>Statistische Auswertung</h1>\n\nDurchläufe: <input type=\"number\" min={1} step={1} bind:value={spiele}>\n\n<button id=\"start\" on:click={start} disabled={! $auto_X || ! $auto_O || $state === \"aktiv\"}>Start</button>\n<button on:click={out.clear} disabled={$state === \"aktiv\"}>Ausgabe löschen</button>\n\n<DevOutTable bind:this={out} keys={[\"Konstellation\", \"Ergebnisse\", \"Längen\"]} />\n\n<style>\n    #start {\n        font-size: 20pt;\n    }\n</style>","<script lang=\"ts\">\n    import H from \"../core\";\n    import Stellung from \"./Stellung.svelte\"\n    import { amZug, hist, overlay, stellung, state, view } from \"../stores\";\n\n    function feldinfo (index: number): string {\n        if (index + 1) {\n            let x = index % 6;\n            return `'${index.toString(36).toUpperCase()}'|${((index < 10) ? \"&nbsp;\" : \"\") + index}|${x}x${(index - x) / 6}`;\n        } else return \"&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\";\n    }\n\n    export let action: string = \"\";\n    export let selected: number = -1;\n    export let hover: number = -1;\n    export let tauschen: () => void;\n\n</script>\n\n<div id=\"__\" class={$state}>\n    {#if $view !== \"std\"}\n        <!-- svelte-ignore a11y-click-events-have-key-events -->\n        <div id=\"stellung\" on:click={() => {\n            if ($state !== \"aktiv\") $overlay = \"stellung\";\n        }}>\n            <Stellung stellung={$stellung}/>\n        </div>\n    {/if}\n\n    <!-- svelte-ignore a11y-click-events-have-key-events -->\n    <div id=\"amZug\" on:click={() => ($view === \"std\" || $state === \"aktiv\") ? undefined : tauschen()} title={($view === \"std\") ? \"Am Zug ist \" + $amZug.c : \"Tauschen durch Klicken\"}>{$amZug.c}</div>\n\n    <div id=\"action\" class:std={$view === \"std\"}>\n        <span>\n            {@html action.replace(\" \", \"&nbsp;\")}\n        </span>\n    </div>\n\n    {#if $view !== \"std\"}\n        <div id=\"selected\">{@html feldinfo(selected)}</div>\n        <div id=\"hover\">{@html feldinfo(hover)}</div>\n    {/if}\n\n</div>\n\n<style>\n    @keyframes aktiv {\n        0% {\n            background-color: #66f;\n        }\n        100% {\n            background-color: #44d;\n        }\n    }\n    #__ {\n        width: 100%;\n        height: 45px;\n        background-color: #4caf50;\n        overflow-y: scroll;\n        overflow-x: hidden;\n        transition: 0.4s;\n    }\n    #__.aktiv {\n        background-color: #66f;\n        animation: aktiv 2s infinite alternate;\n    }\n    #__.ende {\n        background-color: #ec4545;\n    }\n    #__ > div {\n        float: left;\n        height: 100%;\n\n        overflow: hidden;\n        line-height: 35px;\n        padding: 4px 8px;\n\n        font-family: 'Courier New', Courier, monospace;\n        font-weight: bold;\n        font-size: 20px;\n        text-align: center;\n        border: 1px solid #444;\n    }\n    #stellung {\n        width: 200px;\n    }\n    #amZug {\n        width: 40px;\n    }\n    #selected, #hover {\n        width: 145px;\n    }\n    #action {\n        width: calc(100% - 530px);\n        min-width: 190px;\n        /* overflow-y: scroll; */\n    }\n    #action.std {\n        width: calc(100% - 40px);\n    }\n\n</style>\n","<script lang=\"ts\">\n    import H from \"../core\";\n    import { overlay } from \"../stores\";\n    export let stellung: H.Numpos;\n    let height: number;\n</script>\n\n<span title=\"Stellung\">\n    {H.convert.c(stellung)}\n</span>\n\n<style>\n    span {\n        display: inline-block;\n        height: 100%;\n        width: 100%;\n    }\n</style>","<script lang=\"ts\">\n    import DevOutTable from \"./DevOutTable.svelte\";\n    import { amZug, state, stellung, togreRunning } from \"../stores\";\n    import T from \"../togre\";\n    import H from \"../core\";\n    import { download } from \"../tools\";\n\n    const db = T.stdDB;\n\n    function start () {\n        $togreRunning = true;\n        window.setTimeout(() => {\n            const result = db.calc(H.convert.c($stellung), $amZug, optMeth, prefdb);\n            const output = [\n                result.s + \"<br>Player.\" + result.p,\n                (result.optionMethod) + \"<br>\" + (result.prefdb ? \"Ja\" : \"Nein\"),\n                `<h3 style=\"font-size: 200%; color: red; display: inline; margin: 20px\">${result.t}</h3>`,\n                result.time.toLocaleString() + \"ms\",\n                (result.db.xnew + result.db.onew).toLocaleString()\n            ];\n            out.log(output);\n            $togreRunning = false;\n        }, 1000);\n    }\n\n    function dbclear () {\n        const len = db.len();\n        db.clear();\n        if (len) out.log(\"Datenbank wurde geleert: \" + len.toLocaleString() + \" Einträge gelöscht.\");\n    }\n\n    function save () {\n        download(\"Download.togreDB.json\", db.stringify(prompt(\"Bitte gib einen Kommentar für diesen Download an. Er wird zusammen mit den Datenbankinhalten in der heruntergeladenen Datei gesichert, damit du später nachvollziehen kannst, woher dieser Download stammt.\")));\n    }\n\n    let out: DevOutTable;\n    // let logfin: boolean = true;\n    let prefdb: boolean = true;\n    let showOpts = false;\n    let optMeth: \"pure\" | \"logfin\" | \"preffin\" = \"pure\";\n</script>\n\n<h1 style=\"display:inline;\">TOGRE-Rechner:</h1>\n\n<button id=\"start\" on:click={start} disabled={$state === \"aktiv\"}>Start</button>\n<button on:click={() => {out.clear(); if (db.len()) out.log(\"Ausgabe gelöscht. \" + db.len().toLocaleString() + \" Einträge in der DB.\");}} disabled={$state === \"aktiv\"}>Ausgabe löschen</button>\n<button on:click={dbclear} disabled={$state === \"aktiv\"}>Datenbank leeren</button>\n\n<button style=\"font-size: 8pt;\"><label>\n    <input type=\"checkbox\" style=\"margin-bottom: 0;\" bind:checked={showOpts}> Optimierungsdetails anzeigen</label>\n</button>\n<table style=\"display:{showOpts ? '' : 'none'};\"><tr><td>\n    <label style=\"display: inline;\">Optionsmethode: <select bind:value={optMeth}>\n        <option value=\"pure\">Syntaktisch (\"pure\")</option>\n        <option value=\"logfin\">LogFin-Eigenprüfung (\"logfin\")</option>\n        <option value=\"preffin\">LogFin-Optionsprüfung (\"preffin\")</option>\n    </select></label><br>\n    <small>Die Methode \"logfin\" führt meist zu einer Verschlechterung der Performance, reduziert aber die DB-Belastung. Bei \"preffin\" ist dieser Effekt noch stärker.</small>\n<!--     \n    <label style=\"display: inline;\"><input type=\"checkbox\" bind:checked={logfin}> LogFin-Prüfung</label><br>\n    <small>Die logische Finalitätsprüfung (LogFin) kann die Belastung der Datenbank verringern und zur Beschleunigung des Rechenprozesses führen. Je nach Konstellation ist aber auch eine Verlangsamung möglich. Das Ergebnis wird jedoch nicht beeinflusst.</small> -->\n</td><td>\n    <label style=\"display: inline;\"><input type=\"checkbox\" bind:checked={prefdb}> prefDB-Variante</label><br>\n    <small>Hier wird unter den Optionen zunächst nach vorhandenen Einträgen in der Datenbank gesucht, bevor tatsächlich rekursiv gerechnet wird. Dies kann die Datenbank entlasten und die Performance verbessern.</small>\n</td></tr></table>\n    \n<DevOutTable bind:this={out} keys={[\"Konstellation\", \"OptMeth<br>prefDB\", \"Ergebnis\", \"Zeit\", \"Neue<br>DB-Einträge\"]}/>\n<br>\n<button on:click={save} title=\"Die aktuellen Inhalte der Datenbank werden komprimiert kodiert und in deinem Downloads-Ordner als 'Download.togreDB.json' gesichert.\">Datenbankinhalte als Datei sichern</button>\n\n\n<style>\n    #start {\n        font-size: 20pt;\n    }\n</style>","<script lang=\"ts\">\n    import {createEventDispatcher} from \"svelte\";\n    const dispatch = createEventDispatcher();\n    import H from \"../../core\";\n    import { stellung, amZug, final, hist, auto_X, auto_O, state, validate } from \"../../stores\";\n    import BrettBase from \"./BrettBase.svelte\"\n\n    // export let stellung: H.Numpos = [[0, 1, 2, 3, 4, 5], [30, 31, 32, 33, 34, 35]];\n    // export let amZug: H.Player = H.Player.X;\n    export let selected = -1;\n    export let vorschlag: boolean = true;\n    export let classic = true;\n    export let size = 400;\n    export let hover = -1;\n    export let feldnummern: \"alnum\" | \"num\" | \"coord\" | \"chess\" | \"\" = \"alnum\";\n    export let turn = false;\n\n    $: disabled = !! $final || ($state === \"aktiv\");\n\n    hist.add($stellung, $amZug);\n\n    $: selectedPlayer = H.playerAufFeld($stellung, selected);\n\n    function canSelect (stellung: H.Numpos, feldindex: number): boolean {\n        return ($amZug === H.playerAufFeld(stellung, feldindex));\n    }\n\n    function clickHandler (feldindex: number) {\n        if (disabled) return;\n        if (selected === feldindex) selected = -1;\n        else if (selected + 1) {\n            if ($validate && (($stellung[0].includes(selected) && $stellung[0].includes(feldindex)) || ($stellung[1].includes(selected) && $stellung[1].includes(feldindex)))) selected = feldindex;\n            else if ($validate && ! H.zielfelder($stellung, selected, selectedPlayer).includes(feldindex)) {\n                console.warn(\"Der ausgewählte Zug ist unzulässig und wird ignoriert. Um ungültige Züge zu erlauben, wechsele in die Entwickler- oder Programmiereransicht und deaktiviere 'Ungültige Züge sperren'.\");\n            } else {\n                $stellung = H.numposZiehen($stellung, selected, feldindex, selectedPlayer);\n                $amZug = $amZug.t;\n                selected = -1;\n                hist.add($stellung, $amZug);\n                dispatch(\"userzug\");\n            }\n        } else {\n            if (canSelect($stellung, feldindex)) selected = feldindex;\n            else console.debug(\"Feld konnte nicht ausgewählt werden.\");\n        }\n    }\n\n    export function undo (): void {\n        hist.undo();\n    }\n\n</script>\n\n<BrettBase\n    stellung = {$stellung}\n    {vorschlag}\n    bind:hover\n    {classic}\n    {size}\n    xAmZug = {$amZug.x}\n    oAmZug = {$amZug.o}\n    bind:selected\n    on:feldclick = {e => clickHandler(e.detail.feldindex)}\n    {disabled}\n    {feldnummern}\n    {turn}\n/>\n\n","<script lang=\"ts\">\n    import { createEventDispatcher } from \"svelte\";\n    import H from \"../../core\";\n    import { view, vorschlagRechnen } from \"../../stores\";\n    \n    const dispatch = createEventDispatcher();\n\n    export let stellung: H.Numpos = [[0, 1, 2, 3, 4, 5], [30, 31, 32, 33, 34, 35]];\n    export let xAmZug = true;\n    export let oAmZug = true;\n    export let selected = -1;\n    export let vorschlag = true;\n    export let classic = true;\n    export let size = 400;\n    export let hover = -1;\n    export let disabled = false;\n    export let feldnummern: \"alnum\" | \"num\" | \"coord\" | \"chess\" | \"\" = \"alnum\";\n    export let turn = false;\n\n    $: selectedPlayer = H.playerAufFeld(stellung, selected);\n    $: vorschlaege = ($vorschlagRechnen && selected + 1) ? H.zielfelder(stellung, selected, selectedPlayer) : [];\n    \n</script>\n\n<div id=\"brett__\" class:disabled={disabled} style=\"width: {size}px; height: {size}px;\" class:turn={turn}>\n    {#each [...Array(36).keys()] as feldindex}\n        <!-- svelte-ignore a11y-click-events-have-key-events -->\n        <div\n            class:feld={true}\n            class:feldDark={feldindex % 2 === ((((feldindex - (feldindex % 6)) / 2) % 2) ? 0 : 1)}\n            class:feldSelected={selected === feldindex}\n            class:feldX={stellung[0].includes(feldindex)}\n            class:feldO={stellung[1].includes(feldindex)}\n            class:feldAmZug={(stellung[0].includes(feldindex) && xAmZug) || (stellung[1].includes(feldindex) && oAmZug)}\n            class:vorschlag={vorschlag && vorschlaege.includes(feldindex)}\n            on:click={() => dispatch('feldclick', { feldindex: feldindex })}\n            on:mouseenter={() => hover = feldindex}\n            on:mouseleave={() => hover = -1}\n        >\n            {#if $view !== \"std\"}\n                {(function(){\n                    const f = H.fconvert(feldindex);\n                    switch (feldnummern) {\n                        case \"alnum\": return f.alnum;\n                        case \"coord\": return f.x + \"x\" + f.y;\n                        case \"chess\": return f.chess_format;\n                        case \"num\": return f.dez;\n                        default: return \"\";\n                    }\n                })()}\n            {/if}\n        </div>\n    {/each}\n</div>\n\n\n<svelte:head>\n    <link rel=\"stylesheet\" href=\"./styles/brett/general.css\">\n    {#if !classic}\n        <link rel=\"stylesheet\" href=\"./styles/brett/modernTheme.css\">\n    {/if}\n</svelte:head>","import { makeApplyHmr } from 'svelte-hmr/runtime';\r\n\r\n// eslint-disable-next-line no-undef\r\nconst g = typeof window !== 'undefined' ? window : global;\r\n\r\nconst globalKey =\r\n\ttypeof Symbol !== 'undefined'\r\n\t\t? Symbol('SVELTE_LOADER_HOT')\r\n\t\t: '__SVELTE_LOADER_HOT';\r\n\r\nif (!g[globalKey]) {\r\n\t// do updating refs counting to know when a full update has been applied\r\n\tlet updatingCount = 0;\r\n\r\n\tconst notifyStart = () => {\r\n\t\tupdatingCount++;\r\n\t};\r\n\r\n\tconst notifyError = reload => err => {\r\n\t\tconst errString = (err && err.stack) || err;\r\n\t\t// eslint-disable-next-line no-console\r\n\t\tconsole.error(\r\n\t\t\t'[HMR] Failed to accept update (nollup compat mode)',\r\n\t\t\terrString\r\n\t\t);\r\n\t\treload();\r\n\t\tnotifyEnd();\r\n\t};\r\n\r\n\tconst notifyEnd = () => {\r\n\t\tupdatingCount--;\r\n\t\tif (updatingCount === 0) {\r\n\t\t\t// NOTE this message is important for timing in tests\r\n\t\t\t// eslint-disable-next-line no-console\r\n\t\t\tconsole.log('[HMR:Svelte] Up to date');\r\n\t\t}\r\n\t};\r\n\r\n\tg[globalKey] = {\r\n\t\thotStates: {},\r\n\t\tnotifyStart,\r\n\t\tnotifyError,\r\n\t\tnotifyEnd,\r\n\t};\r\n}\r\n\r\nconst runAcceptHandlers = acceptHandlers => {\r\n\tconst queue = [...acceptHandlers];\r\n\tconst next = () => {\r\n\t\tconst cur = queue.shift();\r\n\t\tif (cur) {\r\n\t\t\treturn cur(null).then(next);\r\n\t\t} else {\r\n\t\t\treturn Promise.resolve(null);\r\n\t\t}\r\n\t};\r\n\treturn next();\r\n};\r\n\r\nexport const applyHmr = makeApplyHmr(args => {\r\n\tconst { notifyStart, notifyError, notifyEnd } = g[globalKey];\r\n\tconst { m, reload } = args;\r\n\r\n\tlet acceptHandlers = (m.hot.data && m.hot.data.acceptHandlers) || [];\r\n\tlet nextAcceptHandlers = [];\r\n\r\n\tm.hot.dispose(data => {\r\n\t\tdata.acceptHandlers = nextAcceptHandlers;\r\n\t});\r\n\r\n\tconst dispose = (...args) => m.hot.dispose(...args);\r\n\r\n\tconst accept = handler => {\r\n\t\tif (nextAcceptHandlers.length === 0) {\r\n\t\t\tm.hot.accept();\r\n\t\t}\r\n\t\tnextAcceptHandlers.push(handler);\r\n\t};\r\n\r\n\tconst check = status => {\r\n\t\tif (status === 'ready') {\r\n\t\t\tnotifyStart();\r\n\t\t} else if (status === 'idle') {\r\n\t\t\trunAcceptHandlers(acceptHandlers)\r\n\t\t\t\t.then(notifyEnd)\r\n\t\t\t\t.catch(notifyError(reload));\r\n\t\t}\r\n\t};\r\n\r\n\tm.hot.addStatusHandler(check);\r\n\r\n\tm.hot.dispose(() => {\r\n\t\tm.hot.removeStatusHandler(check);\r\n\t});\r\n\r\n\tconst hot = {\r\n\t\tdata: m.hot.data,\r\n\t\tdispose,\r\n\t\taccept,\r\n\t};\r\n\r\n\treturn { ...args, hot };\r\n});\r\n","import H from \"./core\";\nimport T from \"./togre\";\nimport { later, random, wait } from \"./tools\";\n\nexport interface Info {\n    display: boolean;\n    title: string;\n    description: string;\n    detailKeys?: string[];\n    detailTypes?: string[];\n}\nexport type Autocode = \"rt\" | \"rtf\" | \"sea\" | \"kea400_sea\" | \"ezza100\" | \"ezza400\" | \"hybrid_TE\" | \"kea600_sea\" | \"trs_mat\";\nexport const autocodes = [\"rt\", \"rtf\", \"sea\", \"kea400_sea\", \"ezza100\", \"ezza400\", \"hybrid_TE\", \"kea600_sea\", \"trs_mat\"];\nexport type Automat = (stellung: H.Numpos, player: H.Player, options: H.Option[], detail?: {[index: string]: any}) => H.Option | undefined;\n\nexport const K = {\n    finalzug (p: H.Player, o: H.Option[]): H.Option | undefined {\n        return random(o.filter(option => H.zieleVonStellung(option.ziel, p.t) === p.c));\n    },\n    random (o: H.Option[]): H.Option | undefined {\n        return random(o);\n    }\n}\n\nexport const A: { [index: string]: Automat } = {\n    rt(s, p, o, d) { return K.random(o) },\n    rtf(s, p, o, d) {\n        return K.finalzug(p, o) || K.random(o);\n    },\n    // SCHRITTWEISE ENTWICKELTER AUTOMAT\n    sea(s, p, o) {\n        // 1) Gibt es einen Zug, in dem du gewonnen hast? Wenn ja, wähle ihn.\n        {\n            const f = K.finalzug(p, o);\n            if (f) return f;\n        }\n\n        // 2) Gibt es Optionen, FB zu bilden oder zu ziehen, die daraufhin mehr Fortschritt haben als alle Figuren des Gegners? Wenn ja, ziehe den, der daraufhin den größten Fortschritt hat.\n\n        // 3) Hat der Gegner FB?\n        // JA: Gibt es Optionen, die eine Fig ziehen, die daraufhin mehr Fortschritt hat als alle FB des Gegners?\n        // NEIN:    AUFGEBEN!\n        // JA:      Hast du grüne Züge?\n        // JA:      Schließe alle Nicht-Schlagzüge (auch nicht-schlagende grüne Züge!) aus, deren Fs geringer ist als der des am meisten fortschrittlichen grünen Zuges. (Wir haben also: Alle Schlagzüge sowie den maxFS grünen Zug, auch wenn dieser ein Nicht-Schlagzug ist.)\n        // NEIN:  TOGRE-Berechnung möglich?\n        // JA: \n        // NEIN: \n        // NEIN: \n\n\n\n\n\n        // Grüne Züge und ungedeckte Schlagzüge herausfiltern, wenn vorhanden: Einen zufällig auswählen\n\n        // Schlagzug gegen den Gegner möglich?\n        {\n            const sz = K.random(o.filter(option => s[p.t.i].includes(option.to)))\n            if (sz) return sz;\n        }\n\n        // Sonst einfach Zufall\n        return K.random(o);\n    },\n    keaBase(s, p, o, d) {\n        let st = Date.now();\n        const spiele = d?.spiele || 100,\n            automat = d?.autocode || \"rtf\",\n            detail = d?.autodetail || {};\n        const chancen = o.map(option => {\n            const stat = new Stat(option.ziel, p.t, [automat, automat], [detail, detail], spiele, \"keaBase stat\");\n            return (p.x) ? stat.fx : stat.fo;\n        });\n        let maxChance = Math.max.apply(Math, chancen);\n        console.log(\"Fertig nach\" + (Date.now() - st));\n        return K.random(o.filter((option, i) => chancen[i] === maxChance));\n    },\n    ezza100(s, p, o) {\n        return A.keaBase(s, p, o, {\n            spiele: 100,\n            autocode: \"rtf\",\n            autodetail: {}\n        });\n    },\n    ezza400(s, p, o) {\n        return A.keaBase(s, p, o, {\n            spiele: 400,\n            autocode: \"rtf\",\n            autodetail: {}\n        });\n    },\n    kea400_sea(s, p, o) {\n        return A.keaBase(s, p, o, {\n            spiele: 400,\n            autocode: \"sea\",\n            autodetail: {}\n        });\n    },\n    kea600_sea(s, p, o) {\n        return A.keaBase(s, p, o, {\n            spiele: 800,\n            autocode: \"sea\",\n            autodetail: {}\n        });\n    },\n    hybrid_TE(s, p, o) {\n        if (H.complex(s) > 8) return A.kea400_sea(s, p, o);\n        else {\n            console.log(\"Spiele TOGRE-vollständig\")\n            const t = T.stdDB.calc(H.convert.c(s), p, \"pure\", true).t;\n            console.log(t);\n\n            const bf = bestFraction(o, p);\n            // console.log(\"bestFraction sagt: Die besten Optionen haben TOGRE \" + bf[1]);\n\n            if (bf[1] === p.c) return K.random(bf[0]);\n            else return A.kea400_sea(s, p, bf[0]);\n        }\n    },\n    trs_mat(s, p, o) {\n        let f = K.finalzug(p, o);\n        if (f) return f;\n        function i (s: H.Numpos, p: H.Player, tiefe: number): number {\n            let folgestellungen = H.zieleVonStellung(s, p);\n            switch (folgestellungen) {\n                case \"X\": return 13;\n                case \"O\": return -13;\n                case \"R\": return 0;\n                default: {\n                    if (tiefe) {\n                        const trs_werte = folgestellungen.map(pos => i(pos, p.t, tiefe - 1));\n                        return (p.x ? Math.max : Math.min).apply(Math, trs_werte);\n                    // Jetzt kommt das Entscheidende!\n                    } else return s[0].length - s[1].length;\n                }\n            }\n        }\n        let map = o.map(option => ({opt: option, score: i(option.ziel, p.t, 4)}))\n        console.log(map.map(f => `${f.opt.from} - ${f.opt.to} : ${f.score}`));\n        return map.reduce((prev, curr) => {\n            if ((p.x && prev.score > curr.score) || (p.o && prev.score < curr.score)) return prev;\n            else if ((p.x && prev.score < curr.score) || (p.o && prev.score > curr.score)) return curr;\n            else return (Math.random() < 0.5) ? curr : prev;\n        }).opt;\n\n    }\n}\n\n/**\n * \n * @param o Liste möglicher Optionen für den ziehenden Player p.\n * @param p Der Player, der am Zug ist, gleichzeitig der Klient.\n * @returns [Optionslistenfraktion, TOGRE-Zahl davon]\n */\nexport function bestFraction (o: H.Option[], p: H.Player): [H.Option[], H.Final] {\n    const positiv: H.Option[] = [];\n    const neutral: H.Option[] = [];\n    const negativ: H.Option[] = [];\n    for (let opt of o) {\n        // const t = T.stdDB.calc(H.convert.c(opt.ziel), p.t, \"pure\", true).t;\n        const t = T.stdDB.get(H.convert.c(opt.ziel), p.t);\n        if (t === p.c) positiv.push(opt);\n        if (t === p.t.c) negativ.push(opt);\n        else neutral.push(opt);\n\n    }\n\n    const r = positiv.length ? [positiv, p.c] : (neutral.length ? [neutral, \"R\"] : [negativ, p.t.c]);\n    if (! r[0].length) {\n        console.error(o, p);\n        throw new Error(\"bestFraction() darf noch kein empty array returnen!\");\n    } else return r as [H.Option[], H.Final];\n}\n\nexport const info: {[index in Autocode]: Info} = {\n    rt: {\n        display: false,\n        title: \"Random Typenberger\",\n        description: \"Führt einen zufälligen Zug aus.\",\n        detailKeys: [],\n        detailTypes: []\n    },\n    rtf: {\n        display: true,\n        title: \"Random Typenberger mit Finalfunktion\",\n        description: \"Prüft, ob ein Sieg mit einem Zug möglich ist. Führt sonst einen zufälligen Zug aus.\"\n    },\n    sea: {\n        display: true,\n        title: \"Schrittweise entwickelter Kriterienautomat\",\n        description: \"Hier werden schrittweise Kriterien implementiert.\"\n    },\n    kea400_sea: {\n        display: true,\n        title: \"KEA400 mit SEA\",\n        description: \"Kriterialempirischer Automat (KEA), der 400 mal SEA gegen sich selbst antreten lässt, um statistische Gewinnchancen auszuwerten.\"\n    },\n    kea600_sea: {\n        display: true,\n        title: \"KEA600 mit SEA\",\n        description: \"Kriterialempirischer Automat (KEA), der 600 mal SEA gegen sich selbst antreten lässt, um statistische Gewinnchancen auszuwerten.\"\n    },\n    ezza100: {\n        display: true,\n        title: \"Empirischer Zufall-Zufall-Automat (100)\",\n        description: \"Lässt 100 mal rtf gegen sich selbst antreten.\"\n    },\n    ezza400: {\n        display: true,\n        title: \"Empirischer Zufall-Zufall-Automat (400)\",\n        description: \"Lässt 400 mal rtf gegen sich selbst antreten.\"\n    },\n    hybrid_TE: {\n        display: true,\n        title: \"Hybridautomat: TOGRE+Empirik\",\n        description: \"Spielt zunächst empirisch, später mit TOGRE-vollständig.\"\n    },\n    trs_mat: {\n        display: true,\n        title: \"Materieler TRS-Automat\",\n        description: \"Absolut tiefenlimitiertes Scoring auf Grundlage des Figurenüberhangs.\"\n    }\n}\n\nclass Spiel {\n    stellungen: Array<H.Numpos> = [];\n    readonly start: H.Numpos;\n    readonly startPlayer: H.Player;\n    get len (): number {\n        return this.stellungen.length;\n    }\n    get final (): H.Final | null {\n        const z = H.zieleVonStellung(this.last, this.p);\n        return (typeof z === \"string\") ? z : null;\n    }\n    get p (): H.Player {\n        return (this.stellungen.length % 2) ? this.startPlayer : this.startPlayer.t;\n    }\n    get last (): H.Numpos {\n        return this.stellungen[this.stellungen.length - 1];\n    }\n    constructor (start: H.Numpos, p: H.Player) {\n        this.start = start;\n        this.startPlayer = p;\n        this.add(start);\n    }\n    add (s: H.Numpos): number {\n        return this.stellungen.push(s);\n    }\n}\nexport class Stat {\n    readonly spiele: Array<Spiel> = [];\n    // readonly start: H.Numpos;\n    // readonly startPlayer: H.Player;\n    /**Die Länge des längsten Spiels */\n    readonly maxlen: number;\n    /**Die Länge des kürzesten Spiels */\n    readonly minlen: number;\n    /**Die durchschnittliche Länge der Spiele */\n    readonly avlen: number;\n    /**Der prozentuale Anteil der Spiele, die X gewinnt */\n    readonly fx: number;\n    /**Der prozentuale Anteil der Spiele, die O gewinnt */\n    readonly fo: number;\n    /**Der prozentuale Anteil der Spiele, die im Remis enden */\n    readonly fr: number;\n\n    constructor (\n        readonly start: H.Numpos,\n        readonly startPlayer: H.Player,\n        autos: [Autocode, Autocode],\n        detail: [any, any],\n        spiele: number = 20,\n        readonly kommentar?: string\n    ) {\n        for (spiele; spiele; spiele--) {\n            const spiel = new Spiel(this.start, startPlayer);\n            while (! spiel.final) {\n                // HIER NOCHMAL WAS MACHEN! DIE OPTIONS MÜSSEN DOCH VORBERECHNET WERDEN!!! ODER???\n                spiel.add(runSync(spiel.last, spiel.p, autos[spiel.p.i], detail[spiel.p.i]).ziel);\n            }\n            this.spiele.push(spiel)\n        }\n\n        const lens = this.spiele.map(s => s.len)\n        this.maxlen = Math.max.apply(null, lens);\n        this.minlen = Math.min.apply(null, lens);\n        this.avlen = lens.reduce((prev: number, curr: number) => prev + curr) / lens.length;\n\n        const wins = {\n            x: this.spiele.filter(s => s.final === \"X\").length,\n            o: this.spiele.filter(s => s.final === \"O\").length,\n            r: this.spiele.filter(s => s.final === \"R\").length\n        }\n        this.fx = 100 * wins.x / this.spiele.length;\n        this.fo = 100 * wins.o / this.spiele.length;\n        this.fr = 100 * wins.r / this.spiele.length;\n    }\n}\n\nexport function runSync (stellung: H.Numpos, p: H.Player, auto: Autocode, detail?: any): H.Option {\n    const o = H.getOptions(stellung, p);\n    if (typeof o === \"string\") throw new Error(\"runSync bzw. ein Automat wurde für eine syntaktisch finale Stellung aufgerufen. Das sollte vermieden werden.\");\n    const r = A[auto](stellung, p, o, detail);\n    if (!r) throw new Error(\"Der Automat antwortet nicht.\");\n    return r;\n}\n\nexport default async function run (stellung: H.Numpos, p: H.Player, auto: Autocode, wartezeit?: number): Promise<H.Option> {\n    const wasm = await import(\"wasm\");\n    console.log(\"async run wurde gestartet. Kokonut sagt: \" + wasm.greet());\n    \n    const o = H.getOptions(stellung, p);\n    if (typeof o === \"string\") throw new Error(\"run bzw. ein Automat wurde für eine syntaktisch finale Stellung aufgerufen. Das sollte vermieden werden.\");\n    await wait(wartezeit || 0);\n    return later(() => {\n        const r = A[auto](stellung, p, o, {});\n        if (!r) throw new Error(\"Der Automat antwortet nicht.\");\n        return r;\n    });\n}\n","/**\n * CORE-SKILLS FÜR HEXAGRAR\n * \n * Alle zentralen Methoden rund um das Spiel.\n * \n * AUF KEINEN FALL interfacebezogen oder mit DOM agieren!\n */\n\n// Um zur Browser-Version zurückzukehren, einfach den \"export\" vor der namespace entfernen!\n\nnamespace H {\n    export type Final = \"X\" | \"O\" | \"R\";\n    export type Code = string;\n    export type Numpos = [\n        /**Dez-Felder mit X */\n        number[],\n        /**Dez-Felder mit O */\n        number[]\n    ];\n    export interface Zug {\n        from: number,\n        to: number\n    }\n    export interface Feld {\n        dez: number;\n        x: number;\n        y: number;\n        chess_format: string;\n        alnum: string;\n    }\n    export type FigCount = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n    export type MatCrit = (x: FigCount, o: FigCount) => number;\n\n    export interface Option {\n        from: number;\n        to: number;\n        ziel: H.Numpos;\n    }\n\n    export interface Konstellation {\n        s: Numpos,\n        p: Player\n    }\n\n    export const codePattern = /^[a-z\\d]{0,36}\\.[a-z\\d]{0,36}$/i;\n    export const startStellung = \"012345.uvwxyz\";\n\n    export namespace convert {\n        export function n (code: string): H.Numpos {\n            if (code === \"-\") return [[0,1,2,3,4,5], [30,31,32,33,34,35]] as H.Numpos;\n            return code.split(\".\").map(\n                block => block.split(\"\")\n            ).map(\n                alnumBlock => alnumBlock.map(\n                    alnum => Number.parseInt(alnum, 36)\n                )\n            ) as H.Numpos;\n        }\n        export function c (stellung: H.Numpos): string {\n            return stellung.map(b => b.map(d => d.toString(36)).join(\"\")).join(\".\");\n        }\n    }\n\n    /**Gibt das `Feld` auf diesem Brett zurück.\n     * @param dez Dezimaler Index des Feldes\n     */\n    export function fconvert (dez: number): Feld;\n     /**Gibt das `Feld` auf diesem Brett zurück.\n      * @param x X-Koordinate\n      * @param y Y-Koordinate\n      */\n    export function fconvert (x: number, y: number): Feld;\n     /**Gibt das `Feld` auf diesem Brett zurück.\n      * @param alnum Der alphanumerische Index des Feldes.\n      */\n    export function fconvert (alnum: string): Feld;\n     /**Gibt das `Feld` auf diesem Brett zurück.\n      * @param p1 Der dezimale oder alphanumerische Index bzw. die X-Koordinate des Feldes.\n      * @param p2 Wenn gegeben, wird `p1` als X- und `p2` als Y-Koordinate behandelt.\n      */\n    export function fconvert (p1: number | string, p2?: number): Feld {\n        const result = {\n            x: 0,\n            y: 0,\n            dez: 0,\n            alnum: \"\",\n            chess_format: \"\"\n        } as Feld;\n        switch (typeof p1 + typeof p2) {\n            //Koordinaten\n            case \"numbernumber\": {\n                if (Number.isNaN(p1) || Number.isNaN(p2) || ! Number.isInteger(p1) || ! Number.isInteger(p2) || p1 > 5 || p1 < 0 || p2! > 5 || p2! < 0) throw new Error(\"Invalid coordinates: \" + p1 + \"|\" + p2);\n                // valide Koords\n                result.x = p1 as number; result.y = p2!;\n                result.chess_format = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"][result.x] + (result.y + 1);\n                result.dez = (6 * p2!) + (p1 as number);\n                result.alnum = result.dez.toString(36);\n                return result;\n            }\n            // Dez oder Alnum\n            case \"numberundefined\":\n            case \"stringundefined\": {\n                let dez = (typeof p1 === \"number\") ? p1 as number : Number.parseInt(p1 as string, 36);\n                if (Number.isNaN(dez) || dez > 35 || dez < 0) throw new Error(\"Invalid field index.\");\n                else {\n                    result.dez = dez;\n                    result.alnum = dez.toString(36);\n                    result.x = dez % 6;\n                    result.y = (dez - result.x) / 6;\n                    result.chess_format = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"][result.x] + (result.y + 1);\n                }\n                return result;\n            }\n            default: throw new Error(\"Invalid format: \" + typeof p1 + typeof p2);\n        }\n    }\n\n    /** Ermittelt, ob in der gegebenen Stellung ein Player auf dem gegebenen Feld steht, und wenn ja, welcher.*/\n    export function playerAufFeld (stellung: H.Numpos, feldindex: number): H.Player | null {\n        if (stellung[0].includes(feldindex)) return H.Player.X;\n        else if (stellung[1].includes(feldindex)) return H.Player.O;\n        else return null;\n    }\n\n    /** Erzeugt eine neue `Numpos`, in der der `Player` `p` aus der `Numpos`-Stellung `stellung` von `from` nach `to` gezogen ist.\n     * @param stellung Die `Numpos`-Stellung zu Beginn des Zuges.\n     * @param from Das Feld, von dem die ziehende Figur aus startet. (Numerischer Index)\n     * @param to Das Feld, wo hingezogen wird. (Numerischer Index)\n     * @param p Der `Player`, der zieht.\n     * @returns Die durch den Zug entstandene `Numpos`-Stellung.\n     */\n    export function numposZiehen (stellung: Numpos, from: number, to: number, p: Player): Numpos {\n        if (! stellung[p.i].includes(from)) {\n            console.log(\"stellung = \", stellung, `from = ${from} to = ${to} p = ${p.c}`);\n            throw new Error(`numposZiehen(${convert.c(stellung)}, ${from}, ${to}, ${p.c})` + \": Der ziehende Spieler p steht nicht auf dem Startfeld.\");\n        }\n        const neueStellung = stellung.map(b => b.filter(feldnummer => feldnummer !== from && feldnummer !== to));\n        neueStellung[p.i].push(to);\n        return [\n            neueStellung[0].sort(),\n            neueStellung[1].sort()\n        ];\n    }\n\n    /**Welche Zielfelder sind von einem Feld aus erreichbar?\n     * \n     * @param stellung Aktuelle `Numpos`-Stellung.\n     * @param feldindex Numerischer Index des Startfeldes.\n     * @param p Ziehender `Player`\n     * @returns Liste mit Feldern (numerischer Index), die erreichbar sind.\n    */\n    export function zielfelder (stellung: Numpos, feldindex: number, p: Player): number[] {\n        let zielfelder = [] as number[];\n\n        // Steht der ziehende Spieler nicht auf dem Feld? DAS DARF NICHT SEIN!\n        // FRAGE: Ist das dann ein Fehler, oder einfach `return []`?\n        if (! stellung[p.i].includes(feldindex)) {\n            console.debug(`stellung = `, stellung, ` feldindex = ${feldindex} p = ${p.c}`);\n            throw new Error(\"zielfelder: Player \" + p.c + \" steht nicht auf dem Startfeld.\");\n            return []; //???\n        };\n\n        // letzte Reihe? Dann keine Möglichkeiten.\n        if ((p.x && feldindex > 29) || (p.o && feldindex < 6)) return [];\n\n        // 1 Schritt\n        if (!(stellung[0].includes(feldindex + p.m * 6) || stellung[1].includes(feldindex + p.m * 6)))\n            zielfelder.push(feldindex + p.m * 6);\n\n        // 2 Schritt\n        if (\n            ((p.x && feldindex < 6) || (p.o && feldindex > 29)) &&                                               // init?\n            (!(stellung[0].includes(feldindex + p.m * 12) || stellung[1].includes(feldindex + p.m * 12))) &&     // Ziel leer?\n            (!(stellung[0].includes(feldindex + p.m * 6) || stellung[1].includes(feldindex + p.m * 6)))          // transit leer?\n        ) zielfelder.push(feldindex + p.m * 12);\n\n        // 5-Schlag (rechts)\n        if (\n            ((feldindex + ((p.m - 1) / -2)) % 6) &&                                                              // Rand?\n            (stellung[p.t.i].includes(feldindex + p.m * 5))                                                      // Gegner steht dort?\n        ) zielfelder.push(feldindex + p.m * 5);\n\n        // 7-Schlag (links)\n        if (\n            ((feldindex + ((p.m + 1) / 2)) % 6) &&                                                               // Rand?\n            (stellung[p.t.i].includes(feldindex + p.m * 7))                                                      // Gegner steht dort?\n        ) zielfelder.push(feldindex + p.m * 7);\n\n        return zielfelder;\n    }\n\n    /**Welche Stellungen sind von einem Feld aus erreichbar?\n     * \n     * @param stellung Aktuelle `Numpos`-Stellung.\n     * @param feldindex Numerischer Index des Startfeldes.\n     * @param p Ziehender `Player`\n     * @returns Liste mit `Numpos`-Stellungen, die erreichbar sind.\n    */\n    export function zieleVonFeld (stellung: Numpos, feldindex: number, p: Player): Numpos[] {\n        return zielfelder(stellung, feldindex, p).map(ziel => numposZiehen(stellung, feldindex, ziel, p));\n    }\n\n    /** Welche Züge sind in der Startstellung für den Player möglich?\n     * \n     * Gibt im Falle einer syntaktisch finalen Stellung den `Final`-Code zurück.\n    */\n    export function zuegeVonStellung (stellung: Numpos, p: Player): Zug[] | Final {\n        let g = gewonnen(stellung, p);\n        if (g) return g;\n\n        return Array.prototype.concat.apply([], stellung[p.i].map(\n            startfeld => zielfelder(stellung, startfeld, p).map(\n                zielfeld => ({from: startfeld, to: zielfeld} as Zug)\n            )\n        )) as Zug[];\n    }\n\n    /** Welche Stellungen kann ein Player durch einen Zug erreichen?\n     * \n     * @param stellung Aktuelle `Numpos`-Stellung.\n     * @param p Ziehender `Player`\n     * @returns Liste mit `Numpos`-Stellungen, die erreichbar sind, oder `Final`-Code.\n     */\n    export function zieleVonStellung (stellung: Numpos, p: Player): Numpos[] | Final {\n        let g = gewonnen(stellung, p);\n        if (g) return g;\n\n        let r = Array.prototype.concat.apply([], stellung[p.i].map(\n            startfeld => zieleVonFeld(stellung, startfeld, p)\n        )) as Numpos[];\n\n        if (r.length === 0) return \"R\";\n        return r;\n    }\n\n    /** Ermittelt die Zugoptionen, die der Klient `p` in der Stelllung `s` hat.\n     *\n     * Gibt im Falle einer syntaktisch finalen Stellung den `Final`-Code zurück.\n     * \n     * @param s Die Startstellung.\n     * @param p Der ziehende Spieler (Klient).\n     * @returns Eine Liste möglicher Optionen.\n     */\n    export function getOptions (s: H.Numpos, p: H.Player): Option[] | Final {\n        const z = H.zuegeVonStellung(s, p);\n        if (typeof z === \"string\") return z;\n        const res = z.map(\n            zug => ({ from: zug.from, to: zug.to, ziel: H.numposZiehen(s, zug.from, zug.to, p) })\n        );\n        return res.length ? res : \"R\";\n    }\n    /** Ermittelt die Zugoptionen, die der Klient `p` in der Stellung `s` hat.\n     * \n     * Gibt im Falle einer syntaktisch ***oder logisch finalen*** Stellung den\n     * `Final`-Code zurück.\n     * \n     * Logisch final bedeutet, mit der Stellung ist das Spiel noch nicht beendet\n     * (man kann also noch ziehen), die Stellung ist aber entweder kriterial\n     * nachweisbar TOGRE-positiv für `p`, oder aber der Gegner kann den Sieg nur\n     * noch durch offensichtliche Fehler verlieren. Letzterer Fall gilt als\n     * Empfehlung an alle Automaten, aufzugeben.\n     * \n     * @param s Die Startstellung.\n     * @param p Der ziehende Spieler (Klient).\n     * @returns Eine sortierte Liste möglicher und sinnvoller Optionen.\n     */\n    export function getOptions_logfin(s: H.Numpos, p: H.Player): Option[] | Final {\n        let o = getOptions(s, p);\n\n        // Syntaktische Finalität\n        if (typeof o === \"string\") {\n            return o;\n        };\n\n        // Logische Finalität\n        const l = logFin(s, p);\n        if (l) {\n            return l;\n        }\n        return o;\n    }\n    /** Ermittelt die Zugoptionen, die der Klient `p` in der Stellung `s` hat,\n     * und sortiert diese gemäß der Wahrscheinlichkeit, dass sie sich als\n     * TOGRE-positiv oder andersweitig günstig für den Klienten erweisen.\n     * \n     * Gibt im Falle einer syntaktisch ***oder logisch finalen*** Stellung den\n     * `Final`-Code zurück.\n     * \n     * Logisch final bedeutet, mit der Stellung ist das Spiel noch nicht beendet\n     * (man kann also noch ziehen), die Stellung ist aber entweder kriterial\n     * nachweisbar TOGRE-positiv für `p`, oder aber der Gegner kann den Sieg nur\n     * noch durch offensichtliche Fehler verlieren. Letzterer Fall gilt als\n     * Empfehlung an alle Automaten, aufzugeben.\n     * \n     * @param s Die Startstellung.\n     * @param p Der ziehende Spieler (Klient).\n     * @param includeAll Wenn auf `false` gesetzt (default), werde Optionen, die\n     * garantiert TOGRE-negativ sind, gar nicht in der zurückgegebenen Optionsliste\n     * aufgeführt. Wenn auf `true` gesetzt, werden diese hinten an die Liste angehängt.\n     * @returns Eine sortierte Liste möglicher und sinnvoller Optionen.\n     */\n    export function getOptions_preffin (s: H.Numpos, p: H.Player): Option[] | Final {\n        let o = getOptions(s, p);\n\n        // Syntaktische Finalität\n        if (typeof o === \"string\") {\n            return o;\n        };\n\n        // Logische Finalität\n        // const l = logFin(s, p);\n        // if (l) {\n        //     return l;\n        // }\n\n        // QUATSCH: Das sieht man doch dann schon in der ersten TOGRE-Rekursion. Das frisst nur Performance.\n        // Wenn es logisch final positive Optionen gibt, ist auch diese Stellung positiv.\n        // Ist doch besser, von wegen prefFin\n        if (o.filter(option => logFin(option.ziel, p.t) === p.c || gewonnen(option.ziel, p.t) === p.c).length) {\n            return p.c;\n        };\n        \n        return o;\n        // Die Performance leidet eher unter dieser Sortierung, zumindest in solchen Stellungen, die nicht extra dafür konstruiert, die Features von getSortedOptions zu testen. Daher eine Abkürzung, um den obenstehenden Code isoliert zu betrachten:\n        // Schade, das mit der Sortierung war eine gute Idee, aber es scheint so gar nichts zu bringen. Die Berechnung mit der untenstehenden Sortierung dauerte mehr als 10x so lang wie mit der alten Version, ohne Sortierung und sogar ohne logFin…\n\n        // o.forEach(option => {\n        //     ((logFin(option.ziel, p.t) === p.t.c) ? terrible : o2).push(option);\n        // });\n        // o = o2; o2 = [];\n\n        // // Jetzt kommen sehr primitive Sortierkriterien. Das muss man vielleicht nochmal überdenken…\n\n        // // Ich habe einen größeren maxFortschritt\n        // o.forEach(option => {\n        //     (((maxFortschritt(option.ziel, p) > maxFortschritt(option.ziel, p.t))) ? sorted : o2).push(option)\n        // });\n        // o = o2; o2 = [];\n        // // Ich habe fortschrittlichere Freibauern\n        // o.forEach(option => {\n        //     ((Math.max.apply(Math, freibauern(option.ziel, p).map(f => f.fortschritt)) > Math.max.apply(Math, freibauern(option.ziel, p.t).map(f => f.fortschritt))) ? sorted : o2).push(option);\n        // });\n        // o = o2; o2 = [];\n        // // Der Rest wird nach Summe der Fortschritte der Freibauern geordnet.\n        // sorted = sorted.concat(o.sort((a, b) =>\n        //     freibauern(a.ziel, p).map(f => f.fortschritt).reduce(((p, c) => (p + c)), 0) - freibauern(b.ziel, p).map(f => f.fortschritt).reduce(((p, c) => (p + c)), 0)\n        // ));\n        // return sorted.concat(includeAll ? terrible : []);\n    }\n    \n    /** Ermittelt, ob die gegebene Stellung nicht-neutral syntaktisch final ist, also gewonnen für einen Player. */\n    export function gewonnen (stellung: Numpos, p: Player): Final | null {\n        let xe = typeof winnerFigs(stellung, Player.X) === \"number\",\n            oe = typeof winnerFigs(stellung, Player.O) === \"number\";\n        if (xe && oe) {\n            console.error(\"In der Stellung \" + H.convert.c(stellung) + \" haben beide Player das Ziel erreicht. Dies sollte eigentlich nicht eintreten. Bitte überprüfe, ob beim Aufruf von H.zieleVonStellung ein Programmfehler vorliegt. Um die Funktionalität des Programmes zu wahren, wird dies jedoch ignoriert; als Finalcode wird X angegeben.\");\n            return \"X\";\n        }\n        if (xe) return \"X\";\n        if (oe) return \"O\";\n        return null;\n    }\n\n    /** Ermittelt, ob die Stellung `s` mit `p` am Zug syntaktisch oder logisch final ist. */\n    export function logFin (s: Numpos, p: Player): Final | null {\n        // const g = gewonnen(s, p); if (g) return g;\n        if (Math.max.apply(Math, freibauern(s, p).map(f => f.fortschritt)) >= maxFortschritt(s, p.t)) return p.c;\n        if (Math.max.apply(Math, freibauern(s, p.t).map(f => f.fortschritt)) > maxFortschritt(s, p)) return p.t.c;\n        else return null;\n    }\n\n    /** Gibt, wenn der gegebene `Player` in der gegebenen `Stellung` gewonnen hat, dessen Gewinnfigur zurück. (Sonst `null`) */\n    export function winnerFigs (stellung: Numpos, p: Player): number | null {\n        const best = Math[p.x ? \"max\" : \"min\"].apply(Math, stellung[p.i]);\n        return ((p.x && best > 29) || (p.o && best < 6)) ? best : null;\n    }\n\n    /**Spiegelt die gegebene `Nunpos`-Stellung an der X-Achse (links-rechts).\n     * @param stellung Die `Numpos`-Stellung.\n     * @returns Das X-Spiegelbild von `stellung`.\n     */\n    export function mirror (stellung: H.Numpos): H.Numpos {\n        return [\n            stellung[0].map(f => f - (f % 6) + (5 - (f % 6))).sort(),\n            stellung[1].map(f => f - (f % 6) + (5 - (f % 6))).sort()\n        ];\n    }\n\n    export class Player {\n        static X = new Player(true);\n        static O = new Player(false);\n\n        static toggle(player: Player): Player {\n            return player.t;\n        }\n\n        constructor(x: boolean) {\n            this.o = !(this.x = x);\n            this.c = (x) ? \"X\" : \"O\";\n            this.i = x ? 0 : 1;\n            this.m = x ? 1 : -1;\n        }\n\n        readonly x: boolean;\n        readonly o: boolean;\n        readonly i: 0 | 1;\n        readonly m: 1 | -1;\n        readonly c: \"X\" | \"O\";\n\n        get t(): Player {\n            return this.x ? Player.O : Player.X;\n        }\n\n        /**Errechnet die für den `Player` möglichen Züge in der Stellung `s`.\n         * @param s Die Stellung, in der gezogen wird.\n         */\n        zuege (s: Numpos): Zug[] {\n            return Array.prototype.concat.apply([], s[this.i].map(\n                startfeld => zielfelder(s, startfeld, this).map(zielfeld => ({from: startfeld, to: zielfeld}))\n            ));\n        }\n\n\n    }\n\n    export function testMatCrit (crit: MatCrit): number[][] {\n        const table: number[][] = [];\n        let x: FigCount = 0, o: FigCount = 0;\n        for (x; x < 7; x++) {\n            const entry: number[] = [];\n            for (o; o < 7; o++) {\n                entry[o] = crit(<FigCount>x , <FigCount>o); // WARUM hier Assertion? (notwendig, aber unlogisch)\n            }\n            table.push(entry);\n        }\n        return table;\n    }\n\n    /** Gibt den Fortschritt eines Feldes aus Perspektive eines Spielers an.\n     * \n     * Der Fortschritt der ersten beiden Reihen ist mit 0 identisch, die\n     * dritte Reihe hat den Fortschritt 1, die vierte 2, die fünfte 3 und\n     * die sechste 4.\n     */\n    export function fortschritt (feld: number, p: Player): number {\n        const roh = (2.5 - 2.5 * p.m) + fconvert(feld).y * p.m;\n        return Math.abs(roh - 0.5) - 0.5;\n    }\n\n    /** Gibt den Fortschritt der fortschrittlichsten Figur eines Spielers in einer Stellung zurück. */\n    export function maxFortschritt (s: Numpos, p: Player): number {\n        return Math.max.apply(Math, s[p.i].map(f => fortschritt(f, p)));\n    }\n\n    /** Prüft, ob ein Feld für den gegebenen Player grün ist, und gibt,\n     * wenn ja, dessen Fortschritt, sonst `null` zurück.\n     * \n     * Grün ist ein Feld, wenn die Felder davor unbesetzt und die Felder\n     * vor den Nachbarn von feindlichen Figuren unbesetzt sind. */\n    export function gruen(stellung: Numpos, feld: number, p: Player): null | number {\n        const f = fconvert(feld);\n        for (let y = f.y + p.m; (y < 6 && y > -1); y += p.m) {\n            const davor = fconvert(f.x, y);\n            if (stellung[p.i].includes(davor.dez) || stellung[p.t.i].includes(davor.dez)) return null;\n            if (f.x !== 0 && stellung[p.t.i].includes(fconvert(f.x - 1, y).dez)) return null;\n            if (f.x !== 5 && stellung[p.t.i].includes(fconvert(f.x + 1, y).dez)) return null;\n        }\n        return fortschritt(feld, p);\n    }\n    /** Filtert alle grünen Felder in der Stellung heraus, und gibt diese mit ihrem Fortschritt zurück.\n     * @param stellung Die Stellung.\n     * @param p Der Player, für den die grünen Felder errechnet werden.\n     * @returns Eine Array mit Objekten, jedes mit dem Feldindex eines\n     *          grünen Feldes unter `feld` und dessen Fortschritt\n     *          unter `fortschritt`.\n     */\n    export function grueneFelder (stellung: Numpos, p: Player): {feld: number, fortschritt: number}[] {\n        const gruene = [];\n        for (let feld = 0; feld < 36; feld ++) {\n            const r = gruen(stellung, feld, p);\n            if (typeof r === \"number\") gruene.push({\n                feld: feld,\n                fortschritt: r\n            });\n        }\n        return gruene;\n    }\n\n    /** Gibt eine Liste aller Freibauern eines Spielers, mit ihren Fortschritten zurück.\n     * \n     * @returns Zum Typ, siehe `grueneFelder`.\n     */\n    export function freibauern (s: Numpos, p: Player): {feld: number, fortschritt: number}[] {\n        return grueneFelder(s, p).filter(g => s[p.i].includes(g.feld));\n    }\n\n    export function deckung (stellung: Numpos, feld: number): [number, number] {\n        const f = fconvert(feld),\n            r = [0, 0] as [number, number];\n        if (f.x !== 0 && f.y !== 0 && stellung[0].includes(fconvert(f.x - 1, f.y - 1).dez)) r[0]++;\n        if (f.x !== 0 && f.y !== 5 && stellung[1].includes(fconvert(f.x - 1, f.y + 1).dez)) r[1]++;\n        if (f.x !== 5 && f.y !== 0 && stellung[0].includes(fconvert(f.x + 1, f.y - 1).dez)) r[0]++;\n        if (f.x !== 5 && f.y !== 5 && stellung[1].includes(fconvert(f.x + 1, f.y + 1).dez)) r[1]++;\n        return r;\n    }\n\n    /** Gibt die Komplexität einer Stellung an. Diese entspricht der Anzahl der Figuren, die den Fortschritt 0 haben. */\n    export function complex (s: Numpos): number {\n        // Komplexität eier Stellung entspricht der Anzahl der Figuren, die im eigenen Heimbereich stehen.\n        // Heimbereich = die ersten zwei Reihen\n        \n        // -> Ein Zug kann Komplexität einer Stellung um 0 oder 1 verringern.\n\n        return s[0].filter(fig => ! fortschritt(fig, Player.X)).length + s[1].filter(fig => ! fortschritt(fig, Player.O)).length;\n    }\n\n    // Dann fehlt noch:\n        // T.SymDB\n        // Symmetrie-Kürzungen im Halbkreisgenerator\n        // TOGRE-Berechnung des Halbkreises\n        // T.DB.import()-Methode\n        // TOGRE-Automat (Shell)\n\n    \n}\n\nexport default H;","import H from \"./core\";\n\nclass Halbkreis {\n    constructor (public kommentar: string) {};\n    c = {\n        X: new Set() as Set<string>, \n        O: new Set() as Set<string>, \n        B: new Set() as Set<string>\n    }\n\n    has (stellung: H.Numpos, p: H.Player) {\n        const s = H.convert.c(stellung);\n        return (\n            this.c[p.c].has(s) ||\n            this.c.B.has(s) ||\n            this.c[p.c].has(H.convert.c(H.mirror(stellung))) ||\n            this.c.B.has(H.convert.c(H.mirror(stellung)))\n        );\n    }\n\n    add (s: H.Numpos, p: H.Player) {\n        // Logisch finale Konstellationen werden gar nicht erst gespeichert.\n        if (H.logFin(s, p)) return;\n\n        if (this.has(s, p)) return;\n        if (this.has(s, p.t)) {\n            this.c[p.t.c].delete(H.convert.c(s));\n            this.c[p.t.c].delete(H.convert.c(H.mirror(s)));\n            this.c.B.add(H.convert.c(s));\n            return;\n        }\n        this.c[p.c].add(H.convert.c(s));\n    }\n\n    stringify (kommentar: string) {\n        const so = {\n            str_kommentar: kommentar,\n            hk_kommentar: this.kommentar,\n            len: [this.c.X.size, this.c.O.size, this.c.B.size],\n            timestamp: String(new Date()),\n            z: {\n                X: [...this.c.X],\n                O: [...this.c.O],\n                B: [...this.c.B]\n            }\n        }\n        return JSON.stringify(so);\n    }\n}\n\n\n/** Gibt eine Liste aller Stellung-Player-Paare aus, die reel existieren und eine Komplexität von `grenzwert` haben. */\nexport default function gener (grenzwert: number, s: string, p: H.Player): Halbkreis {\n    if (!s) return gener(grenzwert, \"-\", H.Player.X);\n\n    const hk = new Halbkreis(\"Die DB mit allen Stellungen, die im Halbkreis enthalten sind.\"),\n        st = Date.now();\n\n    const schon = new Halbkreis(\"Die DB, in der Stellungen mit complex > grenzwert gespeichert werden, deren Halbkreisfragment bereits errechnet wurde.\");\n    \n    function rec (s: H.Numpos, p: H.Player): void {\n        const c = H.complex(s);\n        if (c < grenzwert) throw new Error(`Die Stellung ${H.convert.c(s)} mit dem Player ${p.c} wurde eingegeben. Deren Komplexität liegt mit ${c} unter dem Grenzwert von ${grenzwert}. Das bedeutet, dass sich der geforderte Halbkreis unterhalb der gegebenen Konstellation befindet, weshalb er nicht errechnet werden kann.`);\n        else if (c === grenzwert) hk.add(s, p);\n        else {\n            const z = H.zieleVonStellung(s, p);\n            if (typeof z === \"string\") hk.add(s, p);\n            else {\n                if (schon.has(s, p)) return;\n                z.forEach(zielstellung => rec(zielstellung, p.t));\n                if (c > grenzwert) schon.add(s, p);\n            }\n        }\n    }\n    rec(H.convert.n(s), p);\n    console.log(`In ${Date.now() - st}ms wurde ein Halbkreis folgenden Umfangs generiert: ${hk.c.X.size}-X  ${hk.c.O.size}-O  ${hk.c.B.size}-B`);\n    console.log(`Anzahl zusätzl. Berechnungsvermerke: ${schon.c.X.size + schon.c.O.size + schon.c.B.size}`);\n    return hk;\n}\n\n\n// const hk: Halbkreis = {\n//     X: new Set(), \n//     O: new Set(), \n//     B: new Set()\n// }\n\n// function add3 (s: H.Numpos, p: H.Player): void {\n//     if (\n//         hk[p.c].has(H.convert.c(s)) ||\n//         hk.B.has(H.convert.c(s)) ||\n//         hk[p.c].has(H.convert.c(H.mirror(s))) ||\n//         hk.B.has(H.convert.c(H.mirror(s)))\n//     ) return;\n//     if (\n//         hk[p.t.c].has(H.convert.c(s)) ||\n//         hk[p.t.c].has(H.convert.c(H.mirror(s)))\n//     ) {\n//         hk[p.t.c].delete(H.convert.c(s));\n//         hk[p.t.c].delete(H.convert.c(H.mirror(s)));\n//         hk.B.add(H.convert.c(s));\n//         return;\n//     }\n//     hk[p.c].add(H.convert.c(s));\n// }\n// function add2 (s: H.Numpos, p: H.Player): void {\n//     let m = H.convert.c(H.mirror(s)) + \"/\" + p.c;\n//     if (hk.B.has(m)) return; // console.log(`Spiegel: ${H.convert.c(s)}/${p.c} angefragt, bereits enthalten: ${m}`);\n//     else {\n//         // console.log(`KEIN Spiegel: ${H.convert.c(s)}/${p.c} angefragt, ${m} noch nicht enthalten: `, hk.B);\n//         hk.B.add(H.convert.c(s) + \"/\" + p.c);\n//     }\n// }\n// function add (s: H.Numpos, p: H.Player): void {\n//     hk.B.add(H.convert.c(s) + \"/\" + p.c);\n// }\n","const contents = \"Rusty Togre DB saved as string in format x_x x_o x_r o_x o_o o_r. Content follows here: %#l.f/fl.e/r.9/fr.8###fr.e/fl.k/r.f##\";\nexport default contents;","import H from \"./core\";\nimport T from \"./togre\";\nimport type { Autocode } from \"./auto\";\nimport { writable, derived, Readable, readable } from \"svelte/store\";\n\nexport const lastMovTarget = writable(-1);\n\nexport const stellung = writable([[0, 1, 2, 3, 4, 5], [30, 31, 32, 33, 34, 35]] as H.Numpos);\nexport const amZug = writable(H.Player.X);\nexport const final = derived([stellung, amZug], ([s, a]) => {\n    const r = H.zieleVonStellung(s, a);\n    return (typeof r === \"string\") ? r : \"\";\n});\n\nexport const mode = writable(\"spiel\" as (\"spiel\" | \"stat\" | \"togre\"));\nexport const statRunning = writable(false);\nexport const togreRunning = writable(false);\n\n// export const togreDB = readable(new T.DB(\"Die globale togreDB im Store.\"));\n\n// export const devView = writable(false);\nexport const classicView = writable(false);\nexport const view = writable(\"std\" as \"pro\" | \"dev\" | \"std\");\nexport const vorschlagRechnen = writable(true);\nexport const shouldValidate = writable(false);\nexport const validate = derived([shouldValidate, view], ([s, v]) => s || (v === \"std\"));\n\nexport const auto_X = writable(\"\" as Autocode | \"\");\nexport const auto_O = writable(\"\" as Autocode | \"\");\nexport const auto_working = writable(\"\" as \"X\" | \"O\" | \"\");\nexport const auto_auto = writable(true);\nexport const auto_wait = writable(1);\n\nexport const action = derived([final, auto_X, auto_O, auto_working, amZug, statRunning, togreRunning], ([f, x, o, a, p, s, t]) => {\n    if (s) return \"Statistische Auswertung läuft.\";\n    if (t) return \"TOGRE-Berechnung läuft.\";\n    switch (f) {\n        case \"R\": return \"Spiel endet im Remis.\";\n        case \"X\": return \"Spieler X gewinnt.\";\n        case \"O\": return \"Spieler O gewinnt.\";\n        default: {\n            switch (a) {\n                case \"O\": return `Automat '${o}' arbeitet.`;\n                case \"X\": return `Automat '${x}' arbeitet.`;\n                default: {\n                    return \"Bereit: Spieler \" + p.c + \" ist am Zug.\";\n                }\n            }\n        }\n    }\n});\nexport const state = derived([final, auto_working, statRunning, togreRunning], ([f, a, s, t]) => {\n    if (a && f) return console.error(\"Aus der Ableitungsfunktion derived(state): Ein Automat arbeitet, obwohl das Spiel final ist. Unbedingt prüfen! Hier muss ein Programmfehler vorliegen! (\" + a + \", \" + f + \")\");\n    else if (a || s || t) return \"aktiv\";\n    else if (f) return \"ende\";\n    else return \"bereit\";\n}) as Readable<\"ende\" | \"bereit\" | \"aktiv\">;\n\n\ntype OverlayType = \"final\" | \"test\" | \"stellung\" | \"auto_info\" | \"timing_info\" | \"none\";\nexport const overlay = writable(\"none\" as OverlayType);\n\nconst a = {\n    X: (\"\" as Autocode | \"\"),\n    O: (\"\" as Autocode | \"\")\n}\nauto_X.subscribe(ax => a.X = ax);\nauto_O.subscribe(ao => a.O = ao);\ninterface HistEntry {\n    stellung: string;\n    amZug: \"X\" | \"O\";\n    // Der Automat, der jetzt ziehen wird.\n    auto: Autocode | \"\";\n}\nconst {subscribe, set, update} = writable([] as HistEntry[]);\nexport const hist = {\n    subscribe,\n    add: (stellung: H.Numpos, amZug: H.Player) => update(h => [{stellung: H.convert.c(stellung), amZug: amZug.c, auto: a[amZug.c]}].concat(h)),\n    undo: () => update(h => {\n        if (h.length < 2) return h;\n        else {\n            let i: number;\n            for (i = 1; (i + 1) < h.length; i++) {\n                if (! h[i].auto) break;\n            }\n            stellung.set(H.convert.n(h[i].stellung));\n            amZug.set(H.Player[h[i].amZug]);\n            return h.slice(i);\n        }\n    }),\n    clear: () => set([])\n}\n\n\n","import H from \"./core\";\nimport preload from \"./preload_db\";\n\nnamespace T {\n    export interface CalcResult {\n        s: H.Code,\n        p: \"X\" | \"O\",\n        optionMethod: \"pure\" | \"logfin\" | \"preffin\", \n        prefdb: boolean,\n        t: H.Final,\n        time: number,\n        db: {\n            xnew: number,\n            onew: number,\n            x: number,\n            o: number\n        // },\n        // times: {\n        //     i: number,\n        //     get: number,\n        //     set: number\n        }\n    }\n\n    interface RawJsonDB {\n        kommentar: string,\n        zeitstempel: string,\n        eintraege: number,\n        zzz: {\n            X: {\n                X?: string,\n                O?: string,\n                R?: string\n            },\n            O: {\n                X?: string,\n                O?: string,\n                R?: string\n            }\n        }\n    }\n\n    export class DB {\n        constructor(public info: string = \"Für diese Datenbank wurden keine Informationen zur Verfügung gestellt.\") {  };\n        private c = {\n            X: {\n                X: new Set<H.Code>(),\n                O: new Set<H.Code>(),\n                R: new Set<H.Code>()\n            },\n            O: {\n                X: new Set<H.Code>(),\n                O: new Set<H.Code>(),\n                R: new Set<H.Code>()\n            }\n        }\n        preload () {\n            const fields = preload.split(\"%%\")[1].split(\"#\");\n            const keys = [\"XX\", \"XO\", \"XR\", \"OX\", \"OO\", \"OR\"];\n            let loaded = 0, error = 0;\n            keys.forEach((k, i) => {\n                fields[i].split(\"/\").forEach(code => {\n                    if (code.match(H.codePattern)) {\n                        this.c[k[0]][k[1]].add(code);\n                        loaded ++;\n                    } else {\n                        console.error(\"Folgende Stellung konnte nicht aus der Preload-DB geladen werden, weil der Stellungscode ungültig ist: \" + code);\n                        error ++;\n                    }\n                });\n            });\n            console.info(`Preload von ${loaded} Stellungen erfolgreich. ${error} fehlerhaft.`);\n            if (error) console.warn(`Preload: ${error} Stellungscodes fehlerhaft.`);\n        }\n        get (stellung: H.Code, player: H.Player): H.Final | null {\n            // ++ times.get;\n            if (this.c[player.c].R.has(stellung)) return \"R\";\n            if (this.c[player.c].X.has(stellung)) return \"X\";\n            if (this.c[player.c].O.has(stellung)) return \"O\";\n            return null;\n        }\n        set (stellung: H.Code, player: H.Player, togre: H.Final): H.Final {\n            // ++ times.set;\n            this.c[player.c][togre].add(stellung);\n            return togre;\n        }\n        /** Errechnet die TOGRE-Zahl der gegebenen Stellung und gibt ein `CalcResult` zurück, das Input, Output und relevante Meta-Infos zur Berechnung enthält. (Siehe Interface)\n         * \n         * @param optionMethod Gibt an, welche Optionsmethode verwendet werden soll: Pure, logfin oder preffin.\n         * @param prefdb Gibt an, ob TOGRE die prefDB Optimierung anwenden soll, die zu einer leichten Reduktion der DB-Belastung und zur Verbesserung der Performance führt.\n         * \n        */\n        calc (c: H.Code, p: H.Player, optionMethod: \"pure\" | \"logfin\" | \"preffin\", prefdb?: boolean): CalcResult {\n            this.optionMethod = optionMethod\n            const startStellung = H.convert.n(c),\n                zeit = Date.now(),\n                xlen = this.len(H.Player.X),\n                olen = this.len(H.Player.O);\n\n            // console.log(\"T.DB.calc(\" + c + \", \" + p.c + \" startet jetzt die Rekursion.\");\n            const t = this[(prefdb ? \"i_prefdb\" : \"i\")](startStellung, p);\n            // console.log(\"T.DB.calc hat die Rekursion beendet.\");\n\n            const r: CalcResult = {\n                s: c,\n                p: p.c,\n                optionMethod: optionMethod,\n                prefdb: prefdb || false,\n                t: t,\n                time: Date.now() - zeit,\n                db: {\n                    x: this.len(H.Player.X),\n                    o: this.len(H.Player.O),\n                    xnew: 0,\n                    onew: 0\n                // },\n                // times: {\n                //     i: times.i,\n                //     get: times.get,\n                //     set: times.set\n                }\n            }\n            r.db.xnew = r.db.x - xlen;\n            r.db.onew = r.db.o - olen;\n            return r;\n        }\n\n        // /** Ermittelt anhand von Kriterien, ob die gegebene Stellung für einen der beiden Player gewonnen ist. */\n        // final (s: H.Numpos, p: H.Player): H.Final {\n        //     // p ist der Player, der am Zug ist. g ist der Gegner\n\n        //     // Wenn eine Fig von g das Ende erreicht hat:                                       return g\n        //     // Wenn p nicht mehr ziehen kann:                                                   return \"R\"\n\n        //     // Wenn p einen FB hat, der weiter fortgeschritten ist als alle Fig von g:          return p\n        //     // Wenn g einen FB hat, der weiter fortgeschritten ist als alle Fig von p:          return g\n\n        // }\n\n\n        // // interface Option {\n        // //     from: number;\n        // //     to: number;\n        // //     ziel: H.Numpos;\n        // // }\n\n        // /** Beurteilt anhand von Kriterien */\n        // sinnvoll (option: Option, p: H.Player): true | false {\n\n        // }\n\n        // /** Ermittelt anhand von Kriterien alle sinnvollen Optionen. */\n        // relevanteOptionen (optionen: Option[], p: H.Player): Option[] {\n            \n\n\n\n\n\n\n        //     // 1) \n   \n        //     // 2) Gibt es Optionen, FB zu bilden oder zu ziehen, die daraufhin mehr Fortschritt haben als alle Figuren des Gegners? Wenn ja, ziehe den, der daraufhin den größten Fortschritt hat.\n\n        //     // 3) Hat der Gegner FB?\n        //         // JA: Gibt es Optionen, die eine Fig ziehen, die daraufhin mehr Fortschritt hat als alle FB des Gegners?\n        //             // NEIN:    AUFGEBEN!\n        //             // JA:      Hast du grüne Züge?\n        //                 // JA:      Schließe alle Nicht-Schlagzüge (auch nicht-schlagende grüne Züge!) aus, deren Fs geringer ist als der des am meisten fortschrittlichen grünen Zuges. (Wir haben also: Alle Schlagzüge sowie den maxFS grünen Zug, auch wenn dieser ein Nicht-Schlagzug ist.)\n        //                 // NEIN:  TOGRE-Berechnung möglich?\n        //                     // JA: \n        //                     // NEIN: \n        //         // NEIN: \n        // }\n\n        /** Tatsächliche Rekursionsfunktion – nur für internen Gebrauch.*/\n        i (s: H.Numpos, p: H.Player): H.Final {\n            const code = H.convert.c(s);\n            let result: H.Final | null = this.get(H.convert.c(s), p);\n            if (result) return result;\n            else {\n                result = p.t.c;\n                const o = this.executeOptionMethod(s, p, false);\n                if (typeof o === \"string\") {\n                    result = o;\n                } else {\n                    // Wichtigste Änderung: Die Optionen werden iterativ gescannt, wobei (NEU:) die Iteration abgebrochen wird, wenn eine TOGRE-positive Option gefunden wird. Dies verbessert die Performance.\n                    for (let i = 0; i < o.length; i++) {\n                        const kindTogre = this.i(o[i].ziel, p.t);\n                        if (kindTogre === p.c) {\n                            result = p.c;\n                            break;\n                        } else if (kindTogre === \"R\") {\n                            result = \"R\";\n                            continue;\n                        } else {\n                            continue;\n                        }\n                    }\n                }\n                return this.set(code, p, result);\n            }\n        }\n\n        /** Tatsächliche Rekursionsfunktion – nur für internen Gebrauch. – mit prefdb*/\n        i_prefdb (s: H.Numpos, p: H.Player): H.Final {\n            const code = H.convert.c(s);\n            const o = this.executeOptionMethod(s, p, false);\n            let result: H.Final = p.t.c;\n            if (typeof o === \"string\") {\n                result = o;\n            } else {\n                // Wichtigste Änderung: Die Optionen werden iterativ gescannt, wobei (NEU:) die Iteration abgebrochen wird, wenn eine TOGRE-positive Option gefunden wird. Dies verbessert die Performance.\n                // Zweitwichtigste Änderung: Zunächst werden alle Kind-Stellungen geprüft, die bereits in der DB sind. Erst wenn hier keine positive gefunden wird, werden diejenigen berechnet, die noch nicht in der DB sind.\n                const nochtNichtInDB: H.Option[] = [];\n                while (o[0]) {\n                    const kindTogre = this.get(H.convert.c(o[0].ziel), p.t);\n                    if (kindTogre) {\n                        if (kindTogre === p.c) {\n                            result = p.c;\n                            return this.set(code, p, result)\n                        } else if (kindTogre === \"R\") {\n                            result = \"R\";\n                            // continue;\n                        } else {\n                            // continue;\n                        }\n                    } else {\n                        nochtNichtInDB.push(o[0]);\n                    }\n                    o.shift();\n                }\n                while (nochtNichtInDB[0]) {\n                    const kindTogre = this.i_prefdb(nochtNichtInDB[0].ziel, p.t);\n                    nochtNichtInDB.shift();\n                    if (kindTogre === p.c) {\n                        result = p.c;\n                        break;\n                    } else if (kindTogre === \"R\") {\n                        result = \"R\";\n                        continue;\n                    } else {\n                        continue;\n                    }\n                }\n            }\n            return this.set(code, p, result);\n        }\n\n        optionMethod: \"pure\" | \"logfin\" | \"preffin\" = \"pure\";\n        executeOptionMethod (s: H.Numpos, p: H.Player, includeAll: boolean): H.Option[] | H.Final {\n            return ((this.optionMethod === \"preffin\") ? H.getOptions_preffin : ((this.optionMethod === \"logfin\") ? H.getOptions_logfin :H.getOptions))(s, p);\n        }\n\n        /** LÖSCHT ALLE EINTRÄGE in der Datenbank. */\n        clear (): void {\n            this.c.X.X.clear();\n            this.c.X.O.clear();\n            this.c.X.R.clear();\n            this.c.O.X.clear();\n            this.c.O.O.clear();\n            this.c.O.R.clear();\n        }\n        /** Gibt die Anzahl der Einträge in der Datenbank zurück. Die Zählung kann durch Parameter beschränkt werden.\n         * @param player Wenn angegeben, werden nur Einträge für diesen Player gezählt.\n         * @param togre Wenn angegeben, werden nur Einträge mit dieser TOGRE-Zahl gezählt.\n         */\n        len(player?: H.Player, togre?: H.Final): number {\n            if (player) {\n                if (togre) return this.c[player.c][togre].size;\n                else return this.c[player.c][\"X\"].size + this.c[player.c][\"O\"].size + this.c[player.c][\"R\"].size;\n            } else if (togre) return this.len(H.Player.X, togre) + this.len(H.Player.O, togre);\n            else return this.len(H.Player.X) + this.len(H.Player.O);\n        }\n\n        stringify (kommentar: string): string {\n            const c = {\n                X: {\n                    X: [] as string[],\n                    O: [] as string[],\n                    R: [] as string[]\n                },\n                O: {\n                    X: [] as string[],\n                    O: [] as string[],\n                    R: [] as string[]\n                }\n            }\n            this.c.X.X.forEach(v => c.X.X.push(v));\n            this.c.X.R.forEach(v => c.X.R.push(v));\n            this.c.X.O.forEach(v => c.X.O.push(v));\n            this.c.O.X.forEach(v => c.O.X.push(v));\n            this.c.O.R.forEach(v => c.O.R.push(v));\n            this.c.O.O.forEach(v => c.O.O.push(v));\n            const r: RawJsonDB = {\n                kommentar: kommentar,\n                zeitstempel: String(new Date()),\n                eintraege: this.len(),\n                zzz: {\n                    X: {\n                        X: c.X.X.join(\",\"),\n                        O: c.X.O.join(\",\"),\n                        R: c.X.R.join(\",\")\n                    }, O: {\n                        X: c.O.X.join(\",\"),\n                        O: c.O.O.join(\",\"),\n                        R: c.O.R.join(\",\")\n                    }\n                }\n            }\n            return JSON.stringify(r);\n        }\n\n    }\n\n    export const stdDB = new DB(\"Die Standard-Datenbank, die im Namensraum T gesichert wird.\");\n\n}\n\nexport default T;","export function random<T> (array: Array<T>): T | undefined {\n    if (! array.length) return;\n    return array[Math.floor(Math.random() * array.length)];\n}\n\nexport function later<T> (fn: () => T): Promise<T> {\n    return new Promise<T>((r, rej) => {\n        setTimeout(() => {\n            try {\n                r(fn());\n            } catch (err) {\n                rej(err);\n            }\n        }, 1000)\n    })\n}\n\nexport async function wait (ms: number): Promise<void> {\n    return new Promise ((r) => {\n        setTimeout(() => r(), ms)\n    });\n}\n\nexport function download (title: string, content: string): void {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(content));\n    element.setAttribute('download', title);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n}","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","export { SvelteComponentDev as SvelteComponent, SvelteComponentTyped, afterUpdate, beforeUpdate, createEventDispatcher, getAllContexts, getContext, hasContext, onDestroy, onMount, setContext, tick } from './internal/index.mjs';\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.52.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    let len = node.getTotalLength();\n    const style = getComputedStyle(node);\n    if (style.strokeLinecap !== 'butt') {\n        len += parseInt(style.strokeWidth);\n    }\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && !queue.d) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = 1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && (queue.d = 0);\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + chunkId + \".js\";\n};","// This function allow to reference all chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"svelte-app:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.v = (exports, wasmModuleId, wasmModuleHash, importsObj) => {\n\tvar req = fetch(__webpack_require__.p + \"\" + wasmModuleHash + \".module.wasm\");\n\tif (typeof WebAssembly.instantiateStreaming === 'function') {\n\t\treturn WebAssembly.instantiateStreaming(req, importsObj)\n\t\t\t.then((res) => (Object.assign(exports, res.instance.exports)));\n\t}\n\treturn req\n\t\t.then((x) => (x.arrayBuffer()))\n\t\t.then((bytes) => (WebAssembly.instantiate(bytes, importsObj)))\n\t\t.then((res) => (Object.assign(exports, res.instance.exports)));\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"build/bundle\": 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksvelte_app\"] = self[\"webpackChunksvelte_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// @ts-ignore\nimport App from './comp/App.svelte';\n\n\nimport H from \"./core\";\nimport T from \"./togre\";\nimport gener from \"./halbkreis\";\nimport { bestFraction } from './auto';\n\n(window as any).H = H;\n(window as any).T = T;\n(window as any).gener = gener;\n(window as any).bestFraction = bestFraction;\n\n// Search Params auswerten\nimport {stellung, amZug} from \"./stores\";\nconst sp = new URL(document.location.href).searchParams;\nif (sp.get(\"s\")) stellung.set(H.convert.n(sp.get(\"s\")));\nconst p = sp.get(\"p\"); if (p) {\n\tif (p === \"X\") amZug.set(H.Player.X);\n\tif (p === \"O\") amZug.set(H.Player.O);\n}\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":[],"sourceRoot":""}