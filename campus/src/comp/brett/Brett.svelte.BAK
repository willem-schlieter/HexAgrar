<script lang="ts">
    import H from "../core";

    export let stellung: H.Numpos = [[0, 1, 2, 3, 4, 5], [30, 31, 32, 33, 34, 35]];
    export let amZug: H.Player = H.Player.X;
    export let vorschlag: boolean = true;
    export let classic = true;
    export let size = 400;
    export let valid: boolean = true;

    let selected = -1, selectedPlayer: H.Player | null = null;
    $: vorschlaege = (selected + 1) ? H.zielfelder(stellung, selected, selectedPlayer) : [];

    function canSelect (stellung: H.Numpos, feldindex: number): H.Player | null {
        let p = H.playerAufFeld(stellung, feldindex);
        return (valid && (amZug !== p)) ? null : p;
    }

    function clickHandler (feldindex: number) {
        if (selected === feldindex) selected = -1;
        else if (selected + 1) {
            if (valid && ((stellung[0].includes(selected) && stellung[0].includes(feldindex)) || (stellung[1].includes(selected) && stellung[1].includes(feldindex)))) selected = feldindex;
            else if (valid && ! H.zielfelder(stellung, selected, selectedPlayer).includes(feldindex)) {
                console.error("Der ausgewählte Zug ist unzulässig.");
            } else {
                stellung = H.numposZiehen(stellung, selected, feldindex, selectedPlayer);
                selected = -1;
                amZug = amZug.t;
            }
        } else {
            let p = canSelect(stellung, feldindex);
            if (p) [selected, selectedPlayer] = [feldindex, p];
            else console.debug("Feld konnte nicht ausgewählt werden.");
        }
    }
    
</script>

<div id="brett__" style="width: {size}px; height: {size}px;">
    {#each [...Array(36).keys()] as feldindex}
        <div
            class:feld={true}
            class:feldDark={feldindex % 2 === ((((feldindex - (feldindex % 6)) / 2) % 2) ? 0 : 1)}
            class:feldSelected={selected === feldindex}
            class:feldX={stellung[0].includes(feldindex)}
            class:feldO={stellung[1].includes(feldindex)}
            class:feldAmZug={stellung[amZug.i].includes(feldindex)}
            class:vorschlag={vorschlag && vorschlaege.includes(feldindex)}
            on:click={() => clickHandler(feldindex)}
        >
            {feldindex + "." + feldindex.toString(36)}
        </div>
    {/each}
</div>


<svelte:head>
    <link rel="stylesheet" href="./styles/brett/general.css">
    {#if !classic}
        <link rel="stylesheet" href="./styles/brett/modernTheme.css">
    {/if}
</svelte:head>